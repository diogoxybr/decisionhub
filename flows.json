[
    {
        "id": "148c173e8eacbf9a",
        "type": "tab",
        "label": "Tempo real",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a4975ebcc568c40",
        "type": "tab",
        "label": "Seleção",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e9c6344b196bfe35",
        "type": "tab",
        "label": "Previsão",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ea538592da2e51e2",
        "type": "tab",
        "label": "Histórico",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d768a6d29d0e02d4",
        "type": "tab",
        "label": "Nacional",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3c14bb0afdbd62e1",
        "type": "tab",
        "label": "Internacional",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9bccc41af47bb660",
        "type": "Open APIs",
        "name": "Helix Sandbox NG",
        "geType": "orion",
        "apiEndpoint": "http://20.197.229.43:1026/",
        "service": "helixiot",
        "idmEndpoint": "",
        "idmType": "none"
    },
    {
        "id": "366409cd76c69ba2",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#feb020",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#1a8e06",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#4B7930",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#4B7930",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#6db046",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#4b7930",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "blue",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "dark"
            }
        },
        "site": {
            "name": "DECISION HUB - Seu HUB de informações úteis para avicultura",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YY",
            "sizes": {
                "sx": 40,
                "sy": 40,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "95a56cd306c01399",
        "type": "ui_tab",
        "name": "Início",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1026f58dc258542c",
        "type": "ui_tab",
        "name": "Seleção de ovos",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d06c7024e6938db6",
        "type": "ui_tab",
        "name": "Dados Agro",
        "icon": "show_chart",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "25146704fdff4c17",
        "type": "ui_tab",
        "name": "Sobre",
        "icon": "feedback",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "43174ed033fbc86e",
        "type": "ui_tab",
        "name": "Cotação Nacional",
        "icon": "show_chart",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c43e1d3993da57ea",
        "type": "ui_tab",
        "name": "Cotação Internacional",
        "icon": "show_chart",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f8d2be63eb19876e",
        "type": "ui_group",
        "name": "Tempo real: Santa Rita do Passa Quatro, SP, BR",
        "tab": "95a56cd306c01399",
        "order": 1,
        "disp": true,
        "width": "21",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a36d8b353b5ac62a",
        "type": "ui_group",
        "name": "Cadastro de produção e porcentagem da ultima cadastrada",
        "tab": "1026f58dc258542c",
        "order": 1,
        "disp": true,
        "width": "21",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cad099844726e2c2",
        "type": "ui_group",
        "name": "Produção total",
        "tab": "1026f58dc258542c",
        "order": 2,
        "disp": true,
        "width": "21",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5c3af32dfbbc6bd9",
        "type": "ui_group",
        "name": "Gráfico de produção cadastrada",
        "tab": "1026f58dc258542c",
        "order": 4,
        "disp": false,
        "width": "21",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8e1d1b289722c345",
        "type": "ui_group",
        "name": "produção e preço semanais",
        "tab": "d06c7024e6938db6",
        "order": 1,
        "disp": false,
        "width": "23",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ce464e0166efc6ec",
        "type": "ui_group",
        "name": "Trabalho de conclusão de curso",
        "tab": "25146704fdff4c17",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c8f1f291b85d76d5",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "43174ed033fbc86e",
        "order": 1,
        "disp": false,
        "width": "23",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5e1547b4c5b09615",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "c43e1d3993da57ea",
        "order": 1,
        "disp": false,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "42598b0cf938942f",
        "type": "ui_group",
        "name": "Previsão do Tempo: Santa Rita do Passa Quatro, SP, BR",
        "tab": "95a56cd306c01399",
        "order": 2,
        "disp": true,
        "width": "21",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3cdf104460b09eaf",
        "type": "ui_group",
        "name": "Registros de produção",
        "tab": "1026f58dc258542c",
        "order": 3,
        "disp": true,
        "width": "21",
        "collapse": false,
        "className": ""
    },
    {
        "id": "161270f121bf3a0d",
        "type": "ui_spacer",
        "z": "148c173e8eacbf9a",
        "name": "spacer",
        "group": "ce464e0166efc6ec",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "c5056ac5491c2657",
        "type": "ui_spacer",
        "z": "148c173e8eacbf9a",
        "name": "spacer",
        "group": "ce464e0166efc6ec",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "6276a6f9432855b3",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 1,
        "width": 21,
        "height": 1
    },
    {
        "id": "1f08252341e9164e",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 7,
        "width": 6,
        "height": 1
    },
    {
        "id": "89003d5c3419314b",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 8,
        "width": 21,
        "height": 1
    },
    {
        "id": "d1da6ae30ed23fcc",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 14,
        "width": 6,
        "height": 1
    },
    {
        "id": "9acfd98013e3e972",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 15,
        "width": 21,
        "height": 1
    },
    {
        "id": "dd586f0a6cc02490",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 21,
        "width": 6,
        "height": 1
    },
    {
        "id": "19c8080c3c9c1ec8",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 22,
        "width": 21,
        "height": 1
    },
    {
        "id": "7f8d5028c8652c39",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 28,
        "width": 6,
        "height": 1
    },
    {
        "id": "c0d43a003c5a3726",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 29,
        "width": 21,
        "height": 1
    },
    {
        "id": "e35718a8ab198498",
        "type": "ui_spacer",
        "z": "e9c6344b196bfe35",
        "name": "spacer",
        "group": "42598b0cf938942f",
        "order": 35,
        "width": 6,
        "height": 1
    },
    {
        "id": "61c38c1798c70a9b",
        "type": "ui_spacer",
        "z": "5a4975ebcc568c40",
        "name": "spacer",
        "group": "cad099844726e2c2",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "91e0d2df20c28b5c",
        "type": "ui_spacer",
        "z": "5a4975ebcc568c40",
        "name": "spacer",
        "group": "a36d8b353b5ac62a",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "43e6403ddbdb4a80",
        "type": "ui_spacer",
        "z": "5a4975ebcc568c40",
        "name": "spacer",
        "group": "a36d8b353b5ac62a",
        "order": 5,
        "width": 7,
        "height": 1
    },
    {
        "id": "2340f379695d3db8",
        "type": "ui_spacer",
        "z": "5a4975ebcc568c40",
        "name": "spacer",
        "group": "a36d8b353b5ac62a",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "1dc1331145e4cc70",
        "type": "ui_spacer",
        "z": "5a4975ebcc568c40",
        "name": "spacer",
        "group": "3cdf104460b09eaf",
        "order": 3,
        "width": 14,
        "height": 1
    },
    {
        "id": "a06b2fd83eda90fa",
        "type": "ui_spacer",
        "z": "5a4975ebcc568c40",
        "name": "spacer",
        "group": "5c3af32dfbbc6bd9",
        "order": 3,
        "width": 21,
        "height": 1
    },
    {
        "id": "c9b398dc5178f6e0",
        "type": "ui_spacer",
        "z": "5a4975ebcc568c40",
        "name": "spacer",
        "group": "5c3af32dfbbc6bd9",
        "order": 6,
        "width": 21,
        "height": 1
    },
    {
        "id": "f4377ba4dfbfde65",
        "type": "debug",
        "z": "148c173e8eacbf9a",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "f5f7d401e39b7f55",
        "type": "debug",
        "z": "148c173e8eacbf9a",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "2709ef4b62f184ae",
        "type": "change",
        "z": "148c173e8eacbf9a",
        "name": "Ler temperatura",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.temp",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 400,
        "wires": [
            [
                "e9260fc7f8852e75"
            ]
        ]
    },
    {
        "id": "5ff4dad65b2d73c0",
        "type": "debug",
        "z": "148c173e8eacbf9a",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 340,
        "wires": []
    },
    {
        "id": "d775b25784dd04e9",
        "type": "comment",
        "z": "148c173e8eacbf9a",
        "name": "Lê a temperatura e umidade na entidade criada e envia o dado da temperatura atual ao gauge, termômetro e notificação",
        "info": "",
        "x": 440,
        "y": 220,
        "wires": []
    },
    {
        "id": "9c2b4db9126dcecc",
        "type": "comment",
        "z": "148c173e8eacbf9a",
        "name": "Lê a temperatura de São Carlos através do openweather e cria entidade no Helix",
        "info": "",
        "x": 440,
        "y": 20,
        "wires": []
    },
    {
        "id": "92055da4bf90bf02",
        "type": "change",
        "z": "148c173e8eacbf9a",
        "name": "Ler umidade",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.humidity",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "e36b639f8b3640f7",
                "b750c3131d4d942b",
                "9b0f1c469a172a83"
            ]
        ]
    },
    {
        "id": "e9260fc7f8852e75",
        "type": "function",
        "z": "148c173e8eacbf9a",
        "name": "function 2",
        "func": "let celsius = (msg.payload - 273.15);\nmsg.payload = Math.floor(celsius);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 400,
        "wires": [
            [
                "e34f2a194c1d6242"
            ]
        ]
    },
    {
        "id": "b264cb08ede71671",
        "type": "change",
        "z": "148c173e8eacbf9a",
        "name": "Ler desc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.description",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 540,
        "wires": [
            [
                "a92e42061438ea16"
            ]
        ]
    },
    {
        "id": "7e1094f102f884d6",
        "type": "template",
        "z": "148c173e8eacbf9a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Dados atualizados !",
        "output": "str",
        "x": 240,
        "y": 480,
        "wires": [
            [
                "57a9ed03e5c6a883"
            ]
        ]
    },
    {
        "id": "9b9fe6cb57693850",
        "type": "inject",
        "z": "148c173e8eacbf9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "06680ea47a342933",
                "90bb6fd43975f930",
                "d21a459c713ecc78"
            ]
        ]
    },
    {
        "id": "2d027a28860ab2c0",
        "type": "change",
        "z": "148c173e8eacbf9a",
        "name": "Ler sensação",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.feels_like",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 460,
        "wires": [
            [
                "cc29ceff723b721b",
                "30b5c97656ed3ee8"
            ]
        ]
    },
    {
        "id": "cc29ceff723b721b",
        "type": "function",
        "z": "148c173e8eacbf9a",
        "name": "function 7",
        "func": "let celsius = (msg.payload - 273.15);\nmsg.payload = Math.floor(celsius);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 460,
        "wires": [
            [
                "53c192a9efb5478e"
            ]
        ]
    },
    {
        "id": "b750c3131d4d942b",
        "type": "function",
        "z": "148c173e8eacbf9a",
        "name": "function 12",
        "func": "if (msg.payload > 80) {\n    msg.payload = \" Ar muito úmido! Cuidado com o a ploriferação de fungos e bactérias ! \";\n} else if (msg.payload < 30) {\n    msg.payload = \"Ar muito seco! Cuidado a desidatração dos animais, a qualidade do ovo será afetada !\";\n} else {\n    msg.payload = \"Umidade dentro da faixa ideal.\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 240,
        "wires": [
            [
                "814f4995976e7afc"
            ]
        ]
    },
    {
        "id": "9b0f1c469a172a83",
        "type": "debug",
        "z": "148c173e8eacbf9a",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 320,
        "wires": []
    },
    {
        "id": "30b5c97656ed3ee8",
        "type": "function",
        "z": "148c173e8eacbf9a",
        "name": "function 13",
        "func": "if (msg.payload > 26) {\n    msg.payload = \" Fora da zona de conforto térmico ! Aves podem se estressar e aumentar da ingestão de água, redução no consumo de ração. \";\n} else if (msg.payload < 20) {\n    msg.payload = \" Fora da zona de conforto térmico ! afeta o metabolismo dos animais e aumenta o consumo de alimentos.\";\n} else {\n    msg.payload = \"Zona de conforto térmico a temperatura está dentro da faixa ideal.\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 420,
        "wires": [
            [
                "e6fed37f1b9fc07d"
            ]
        ]
    },
    {
        "id": "e6fed37f1b9fc07d",
        "type": "delay",
        "z": "148c173e8eacbf9a",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1120,
        "y": 420,
        "wires": [
            [
                "1cadf120a2204d30"
            ]
        ]
    },
    {
        "id": "814f4995976e7afc",
        "type": "delay",
        "z": "148c173e8eacbf9a",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 240,
        "wires": [
            [
                "ce71a82dea1fb97f"
            ]
        ]
    },
    {
        "id": "768e66eeecc658cd",
        "type": "NGSI Entity",
        "z": "148c173e8eacbf9a",
        "name": "Criar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "upsert",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 720,
        "y": 80,
        "wires": [
            [
                "f5f7d401e39b7f55"
            ]
        ]
    },
    {
        "id": "06680ea47a342933",
        "type": "NGSI Entity",
        "z": "148c173e8eacbf9a",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:OpenWeatherMapWeather:3449851",
        "entityType": "OpenWeatherMapWeather",
        "attrs": "main",
        "keyValues": "false",
        "dateModified": "false",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "9713cc4c8866a808",
                "7e1094f102f884d6"
            ]
        ]
    },
    {
        "id": "90bb6fd43975f930",
        "type": "NGSI Entity",
        "z": "148c173e8eacbf9a",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:OpenWeatherMapWeather:3449851",
        "entityType": "OpenWeatherMapWeather",
        "attrs": "weather",
        "keyValues": "false",
        "dateModified": "false",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "ceb7022157ec4ace"
            ]
        ]
    },
    {
        "id": "9713cc4c8866a808",
        "type": "NGSI Attribute value",
        "z": "148c173e8eacbf9a",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "",
        "entityType": "",
        "attrName": "main",
        "skipForwarding": "false",
        "forcedUpdate": "false",
        "flowControl": "false",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "2709ef4b62f184ae",
                "92055da4bf90bf02",
                "5ff4dad65b2d73c0",
                "2d027a28860ab2c0"
            ]
        ]
    },
    {
        "id": "ceb7022157ec4ace",
        "type": "NGSI Attribute value",
        "z": "148c173e8eacbf9a",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "",
        "entityType": "",
        "attrName": "weather",
        "skipForwarding": "false",
        "forcedUpdate": "false",
        "flowControl": "false",
        "x": 340,
        "y": 540,
        "wires": [
            [
                "b264cb08ede71671"
            ]
        ]
    },
    {
        "id": "c71215b7ac67e683",
        "type": "OpenWeatherMap to NGSI",
        "z": "148c173e8eacbf9a",
        "name": "WeatherToNGSI",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "768e66eeecc658cd",
                "f4377ba4dfbfde65"
            ]
        ]
    },
    {
        "id": "b54633cc1236bacb",
        "type": "ui_button",
        "z": "148c173e8eacbf9a",
        "name": "",
        "group": "f8d2be63eb19876e",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Atualizar dados",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "update",
        "payload": "{}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "06680ea47a342933",
                "90bb6fd43975f930",
                "d21a459c713ecc78"
            ]
        ]
    },
    {
        "id": "a92e42061438ea16",
        "type": "ui_text",
        "z": "148c173e8eacbf9a",
        "group": "f8d2be63eb19876e",
        "order": 1,
        "width": 21,
        "height": 1,
        "name": "",
        "label": "Situação:  ",
        "format": " {{value}}",
        "layout": "row-center",
        "className": "",
        "x": 700,
        "y": 540,
        "wires": []
    },
    {
        "id": "e34f2a194c1d6242",
        "type": "ui_gauge",
        "z": "148c173e8eacbf9a",
        "name": "",
        "group": "f8d2be63eb19876e",
        "order": 3,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "Temperatura atual",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 790,
        "y": 400,
        "wires": []
    },
    {
        "id": "e36b639f8b3640f7",
        "type": "ui_gauge",
        "z": "148c173e8eacbf9a",
        "name": "",
        "group": "f8d2be63eb19876e",
        "order": 4,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "Umidade atual",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "53c192a9efb5478e",
        "type": "ui_gauge",
        "z": "148c173e8eacbf9a",
        "name": "",
        "group": "f8d2be63eb19876e",
        "order": 2,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "Sensação térmica atual",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 460,
        "wires": []
    },
    {
        "id": "57a9ed03e5c6a883",
        "type": "ui_toast",
        "z": "148c173e8eacbf9a",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "1cadf120a2204d30",
        "type": "ui_toast",
        "z": "148c173e8eacbf9a",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1290,
        "y": 420,
        "wires": []
    },
    {
        "id": "ce71a82dea1fb97f",
        "type": "ui_toast",
        "z": "148c173e8eacbf9a",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1250,
        "y": 240,
        "wires": []
    },
    {
        "id": "d21a459c713ecc78",
        "type": "openweathermap",
        "z": "148c173e8eacbf9a",
        "name": "",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Santa Rita do Passa Quatro",
        "country": "Brasil",
        "language": "pt",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "c71215b7ac67e683"
            ]
        ]
    },
    {
        "id": "cf342d7abcac48b4",
        "type": "ui_text",
        "z": "148c173e8eacbf9a",
        "group": "ce464e0166efc6ec",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Diogo Araújo, Humberto Gonzaga e João Rocha",
        "format": " {{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 540,
        "y": 660,
        "wires": []
    },
    {
        "id": "5fa3ca6643f6d421",
        "type": "ui_text",
        "z": "148c173e8eacbf9a",
        "group": "ce464e0166efc6ec",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Prof. Dr. Fábio Henrique Cabrini",
        "format": " {{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 490,
        "y": 740,
        "wires": []
    },
    {
        "id": "aac23de513ae8ad7",
        "type": "ui_text",
        "z": "148c173e8eacbf9a",
        "group": "ce464e0166efc6ec",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Autores:",
        "format": " {{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 420,
        "y": 620,
        "wires": []
    },
    {
        "id": "1300571e0b84ca88",
        "type": "ui_text",
        "z": "148c173e8eacbf9a",
        "group": "ce464e0166efc6ec",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Orientador:",
        "format": " {{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 430,
        "y": 700,
        "wires": []
    },
    {
        "id": "6a63c4aa5cf46339",
        "type": "function",
        "z": "5a4975ebcc568c40",
        "name": "% ovos",
        "func": "if (msg.payload.good && msg.payload.bad) {\n    var valor1 = parseInt(msg.payload.good);\n    var valor2 = parseInt(msg.payload.bad);\n\n    if (!isNaN(valor1) && !isNaN(valor2)) {\n        var soma = valor1 + valor2;\n    }\n}\n\n//porcentagem ruins\nvar bad_pc = msg.valor2 || 0;\nbad_pc = (valor2 / soma) * 100;\nmsg.bad_pc = Math.round(bad_pc);\n\n//porcentagem boas\nvar good_pc = valor1 || 0;\ngood_pc = (valor1 / soma) * 100;\nmsg.good_pc = Math.round(good_pc);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 220,
        "wires": [
            [
                "9bb4846fcdc0c53e",
                "9834b9ff599c3e33"
            ]
        ]
    },
    {
        "id": "0c26b6fe05404ba9",
        "type": "inject",
        "z": "5a4975ebcc568c40",
        "name": "Apagar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "d82d641b722d2202"
            ]
        ]
    },
    {
        "id": "f6a7e44aa7832336",
        "type": "debug",
        "z": "5a4975ebcc568c40",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 500,
        "wires": []
    },
    {
        "id": "a58fa236741ec245",
        "type": "inject",
        "z": "5a4975ebcc568c40",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"urn:ngsi-ld:AgriFarm:1\",\"type\":\"AgriFarm\",\"name\":{\"value\":\"ETASA\"},\"description\":{\"value\":\"ESCOLA TECNICA AGROPECUARIA ENGENHEIRO SALVADOR ARENA\"},\"seeAlso\":{\"value\":[\"http://escolatecnicasalvadorarena.org.br/\"]},\"address\":{\"type\":\"PostalAddress\",\"value\":{\"addressLocality\":\"Santa Rita do Passa Quatro, SP\",\"addressCountry\":\"BR\",\"streetAddress\":\"SP-330, KM 238, CEP 13670-000\"}},\"contactPoint\":{\"type\":\"ContactPoint\",\"value\":{\"email\":\"secretaria@escolatecnicasalvadorarena.org.br\",\"telephone\":\"55 19 3584-8980\"}},\"production\":{\"type\":\"Data\",\"value\":[{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-0\",\"Data\":\"16/07/2021\",\"Bons\":549,\"Ruins\":32,\"Total\":581},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-1\",\"Data\":\"23/07/2021\",\"Bons\":711,\"Ruins\":29,\"Total\":740},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-2\",\"Data\":\"30/07/2021\",\"Bons\":670.5,\"Ruins\":24.5,\"Total\":695},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-3\",\"Data\":\"03/08/2021\",\"Bons\":672.5,\"Ruins\":19.5,\"Total\":692},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-4\",\"Data\":\"09/08/2021\",\"Bons\":730,\"Ruins\":15,\"Total\":745},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-5\",\"Data\":\"17/08/2021\",\"Bons\":775,\"Ruins\":11,\"Total\":786},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-6\",\"Data\":\"24/08/2021\",\"Bons\":780,\"Ruins\":15,\"Total\":795},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-7\",\"Data\":\"31/08/2021\",\"Bons\":784,\"Ruins\":12,\"Total\":796},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-8\",\"Data\":\"08/09/2021\",\"Bons\":891,\"Ruins\":18,\"Total\":909},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-9\",\"Data\":\"14/09/2021\",\"Bons\":674,\"Ruins\":16,\"Total\":690},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-10\",\"Data\":\"20/09/2021\",\"Bons\":790,\"Ruins\":10,\"Total\":800},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-11\",\"Data\":\"27/09/2021\",\"Bons\":790,\"Ruins\":7,\"Total\":797},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-12\",\"Data\":\"05/10/2021\",\"Bons\":757,\"Ruins\":10,\"Total\":767},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-13\",\"Data\":\"14/10/2021\",\"Bons\":975,\"Ruins\":17,\"Total\":992},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-14\",\"Data\":\"19/10/2021\",\"Bons\":540,\"Ruins\":12,\"Total\":552},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-15\",\"Data\":\"26/10/2021\",\"Bons\":759,\"Ruins\":8,\"Total\":767},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-16\",\"Data\":\"03/11/2021\",\"Bons\":860,\"Ruins\":13,\"Total\":873},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-17\",\"Data\":\"09/11/2021\",\"Bons\":630,\"Ruins\":7,\"Total\":637},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-18\",\"Data\":\"16/11/2021\",\"Bons\":725,\"Ruins\":5,\"Total\":730},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-19\",\"Data\":\"23/11/2021\",\"Bons\":742,\"Ruins\":5,\"Total\":747},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-20\",\"Data\":\"30/11/2021\",\"Bons\":755,\"Ruins\":5,\"Total\":760},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-21\",\"Data\":\"07/12/2021\",\"Bons\":750,\"Ruins\":10,\"Total\":760},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-22\",\"Data\":\"14/12/2021\",\"Bons\":760,\"Ruins\":7,\"Total\":767},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-23\",\"Data\":\"20/12/2021\",\"Bons\":750,\"Ruins\":10,\"Total\":760},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-24\",\"Data\":\"28/12/2021\",\"Bons\":764,\"Ruins\":8,\"Total\":772},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-25\",\"Data\":\"04/01/2022\",\"Bons\":761,\"Ruins\":11.5,\"Total\":772.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-26\",\"Data\":\"11/01/2022\",\"Bons\":758,\"Ruins\":7,\"Total\":765},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-27\",\"Data\":\"18/01/2022\",\"Bons\":753,\"Ruins\":14.5,\"Total\":767.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-28\",\"Data\":\"25/01/2022\",\"Bons\":760,\"Ruins\":10,\"Total\":770},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-29\",\"Data\":\"01/02/2022\",\"Bons\":766.5,\"Ruins\":6,\"Total\":772.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-30\",\"Data\":\"08/02/2022\",\"Bons\":760,\"Ruins\":5,\"Total\":765},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-31\",\"Data\":\"15/02/2022\",\"Bons\":768.5,\"Ruins\":4,\"Total\":772.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-32\",\"Data\":\"22/02/2022\",\"Bons\":764,\"Ruins\":6,\"Total\":770},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-33\",\"Data\":\"04/03/2022\",\"Bons\":1080,\"Ruins\":12.5,\"Total\":1092.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-34\",\"Data\":\"08/03/2022\",\"Bons\":430,\"Ruins\":2.5,\"Total\":432.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-35\",\"Data\":\"15/03/2022\",\"Bons\":440,\"Ruins\":2,\"Total\":442},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-36\",\"Data\":\"22/03/2022\",\"Bons\":495,\"Ruins\":3.5,\"Total\":498.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-37\",\"Data\":\"29/03/2022\",\"Bons\":530,\"Ruins\":3,\"Total\":533},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-38\",\"Data\":\"05/04/2022\",\"Bons\":520,\"Ruins\":4,\"Total\":524},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-39\",\"Data\":\"12/04/2022\",\"Bons\":539,\"Ruins\":3,\"Total\":542},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-40\",\"Data\":\"19/04/2022\",\"Bons\":520,\"Ruins\":2,\"Total\":522},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-41\",\"Data\":\"26/04/2022\",\"Bons\":525,\"Ruins\":2,\"Total\":527},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-42\",\"Data\":\"03/05/2022\",\"Bons\":510,\"Ruins\":1,\"Total\":511},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-43\",\"Data\":\"10/05/2022\",\"Bons\":525,\"Ruins\":2.5,\"Total\":527.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-44\",\"Data\":\"17/05/2022\",\"Bons\":520,\"Ruins\":3.5,\"Total\":523.5},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-45\",\"Data\":\"24/05/2022\",\"Bons\":540,\"Ruins\":4,\"Total\":544},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-46\",\"Data\":\"31/05/2022\",\"Bons\":550,\"Ruins\":4,\"Total\":554},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-47\",\"Data\":\"07/06/2022\",\"Bons\":712,\"Ruins\":4.3,\"Total\":716.3},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-48\",\"Data\":\"14/06/2022\",\"Bons\":709,\"Ruins\":5,\"Total\":714},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-49\",\"Data\":\"20/06/2022\",\"Bons\":700.5,\"Ruins\":5.5,\"Total\":706},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-50\",\"Data\":\"27/06/2022\",\"Bons\":687.25,\"Ruins\":8,\"Total\":695.25},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-51\",\"Data\":\"05/07/2022\",\"Bons\":675.5,\"Ruins\":11.5,\"Total\":687},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-52\",\"Data\":\"11/07/2022\",\"Bons\":680,\"Ruins\":15,\"Total\":695},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-53\",\"Data\":\"20/07/2022\",\"Bons\":680,\"Ruins\":11,\"Total\":691},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-54\",\"Data\":\"25/07/2022\",\"Bons\":685,\"Ruins\":6,\"Total\":691},{\"id\":\"urn:ngsi-ld:AgriFarm:1684784725909-55\",\"Data\":\"02/08/2022\",\"Bons\":675.5,\"Ruins\":7.5,\"Total\":683}]}}",
        "payloadType": "json",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "a6d8d42ee3c3501b"
            ]
        ]
    },
    {
        "id": "3dd45a752c03f51e",
        "type": "debug",
        "z": "5a4975ebcc568c40",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 460,
        "wires": []
    },
    {
        "id": "e2e744092724b4c3",
        "type": "function",
        "z": "5a4975ebcc568c40",
        "name": "function 35",
        "func": "// Função para formatar os dados recebidos no formato especificado\nfunction formatarDados(dados) {\n    // Obtém as linhas existentes da variável global ou do contexto de fluxo\n    var tableData = flow.get(\"tableData\") || [];\n\n    // Limpa a tabela existente\n    tableData = [];\n\n    // Percorre os dados recebidos\n    for (var i = 0; i < dados.length; i++) {\n        var dado = dados[i];\n\n        // Cria um objeto para a nova linha com os valores recebidos\n        var newRow = {\n            \"Id\": dado.id,\n            \"Data\": dado.Data,\n            \"Bons\": dado.Bons,\n            \"Ruins\": dado.Ruins,\n            \"Total\": dado.Total\n        };\n\n        // Adiciona a nova linha ao array de dados da tabela\n        tableData.push(newRow);\n    }\n\n    // Armazena as linhas atualizadas na variável global ou no contexto de fluxo\n    flow.set(\"tableData\", tableData);\n\n    // Define o payload da mensagem como os dados atualizados da tabela\n    msg.payload = tableData;\n\n    return msg;\n}\n\n// Obtenha os valores dos dados recebidos\nvar dadosRecebidos = msg.payload.production;\n\n// Chame a função para formatar os dados\nvar mensagemFormatada = formatarDados(dadosRecebidos);\n\nreturn mensagemFormatada;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "6a145f72e48927de",
                "b949edc845948e33"
            ]
        ]
    },
    {
        "id": "30fea0eed0332fb2",
        "type": "function",
        "z": "5a4975ebcc568c40",
        "name": "function 36",
        "func": "// Função para formatar os dados no formato especificado\nfunction formatarDados(dados) {\n    var dadosFormatados = {\n        \"id\": \"urn:ngsi-ld:AgriFarm:1\",\n        \"type\": \"AgriFarm\",\n        \"production\": {\n            \"type\": \"Data\",\n            \"value\": []\n        }\n    };\n\n    for (var i = 0; i < dados.length; i++) {\n        var dado = dados[i];\n\n        // Gere um ID único para cada dado inserido\n        var id = \"urn:ngsi-ld:AgriFarm:\" + (new Date()).getTime() + \"-\" + i;\n\n        var dadoFormatado = {\n            \"id\": id,\n            \"Data\": dado.Data,\n            \"Bons\": dado.Bons,\n            \"Ruins\": dado.Ruins,\n            \"Total\": dado.Total\n        };\n\n        dadosFormatados.production.value.push(dadoFormatado);\n    }\n\n    return dadosFormatados;\n}\n\n// Obtenha os valores dos dados\nvar dadosInput = msg.payload;\n\n// Chame a função para formatar os dados\nvar dadosFormatados = formatarDados(dadosInput);\n\n// Obtenha o valor atual do atributo \"production\"\nvar productionValue = flow.get(\"tableData.production.value\") || [];\n\n// Combine o valor atual com os novos dados formatados\nproductionValue = productionValue.concat(dadosFormatados.production.value);\n\n// Atualize apenas o valor do atributo \"production\"\nflow.set(\"tableData.production.value\", productionValue);\n\n// Defina os dados formatados como o payload da mensagem\nmsg.payload = dadosFormatados;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 400,
        "wires": [
            [
                "c52fcc27eba9d501"
            ]
        ]
    },
    {
        "id": "277a24589cab4a5c",
        "type": "function",
        "z": "5a4975ebcc568c40",
        "name": "function 32",
        "func": "// Função para formatar uma data no formato \"DD/MM/AAAA\"\nfunction formatarData(data) {\n    var dateObj = new Date(data);\n    var dia = dateObj.getDate();\n    var mes = dateObj.getMonth() + 1;\n    var ano = dateObj.getFullYear();\n\n    // Formata o dia e mês para sempre ter dois dígitos\n    dia = (dia < 10) ? '0' + dia : dia;\n    mes = (mes < 10) ? '0' + mes : mes;\n\n    var dataFormatada = dia + '/' + mes + '/' + ano;\n\n    return dataFormatada;\n}\n\n// Exemplo de uso da função\nvar dataInput = msg.payload.date;\nvar dataFormatada = formatarData(dataInput);\n\n// Obtém as linhas existentes da variável global ou do contexto de fluxo\nvar tableData = flow.get(\"tableData\") || [];\n\n// Cria um objeto para a nova linha\nvar newRow = {\n    \"Data\": dataFormatada,\n    \"Bons\": parseFloat(msg.payload.good),\n    \"Ruins\": parseFloat(msg.payload.bad),\n    \"Total\": parseFloat(msg.payload.bad) + parseFloat(msg.payload.good)\n};\n\n// Adiciona a nova linha ao array de dados da tabela\ntableData.push(newRow);\n\n// Armazena as linhas atualizadas na variável global ou no contexto de fluxo\nflow.set(\"tableData\", tableData);\n\n// Define o payload da mensagem como os dados atualizados da tabela\nmsg.payload = tableData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 400,
        "wires": [
            [
                "30fea0eed0332fb2"
            ]
        ]
    },
    {
        "id": "e2a51c7e21d2e1e7",
        "type": "function",
        "z": "5a4975ebcc568c40",
        "name": "function 37",
        "func": "var input = msg.payload;\n\nvar arrData = [];\nvar arrTotal = [];\n\nfor (var i = 0; i < input.production.length; i++) {\n    var item = input.production[i];\n    arrData.push(item.Data);\n    arrTotal.push(item.Total);\n}\n\n// Função auxiliar para ordenar os dados cronologicamente\nfunction sortByDate(data, total) {\n    var sortedData = [];\n    var sortedTotal = [];\n\n    // Cria um array de objetos com os dados e o total\n    var dataWithTotal = data.map(function (value, index) {\n        var dateParts = value.split('/');\n        var day = parseInt(dateParts[0], 10);\n        var month = parseInt(dateParts[1], 10) - 1; // Subtraímos 1 para corresponder aos meses no formato Date (0-11)\n        var year = parseInt(dateParts[2], 10) + 2000; // Adicionamos 2000 para obter o ano no formato completo\n\n        return { data: new Date(year, month, day), total: total[index] };\n    });\n\n    // Ordena o array de objetos com base na propriedade \"data\"\n    dataWithTotal.sort(function (a, b) {\n        return a.data - b.data;\n    });\n\n    // Separa os dados ordenados em arrays separados\n    dataWithTotal.forEach(function (item) {\n        sortedData.push(formatarData(item.data));\n        sortedTotal.push(item.total);\n    });\n\n    return { data: sortedData, total: sortedTotal };\n}\n\n// Função auxiliar para formatar a data no formato \"DD/MM/AA\"\nfunction formatarData(data) {\n    var dia = data.getDate();\n    var mes = data.getMonth() + 1;\n    var ano = data.getFullYear().toString().substr(-2);\n\n    dia = (dia < 10) ? '0' + dia : dia;\n    mes = (mes < 10) ? '0' + mes : mes;\n\n    return dia + '/' + mes + '/' + ano;\n}\n\n// Ordena os dados cronologicamente\nvar sortedData = sortByDate(arrData, arrTotal);\n\nfunction formatData(data, total) {\n    const dataObject = [{\n        \"series\": [\"Produzidos (Dz)\"],\n        \"data\": [total],\n        \"labels\": data\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(sortedData.data, sortedData.total);\nreturn { payload: result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 260,
        "wires": [
            [
                "f77e83b984498625"
            ]
        ]
    },
    {
        "id": "af8a4116b921c3a4",
        "type": "function",
        "z": "5a4975ebcc568c40",
        "name": "function 38",
        "func": "var bonsTotal = 0;\nvar ruinsTotal = 0;\n\n// Verifica se a propriedade 'production' existe e é um array\nif (msg.payload.production && Array.isArray(msg.payload.production)) {\n    // Percorre cada item no array 'production'\n    msg.payload.production.forEach(function (item) {\n        bonsTotal += item.Bons || 0;\n        ruinsTotal += item.Ruins || 0;\n    });\n}\n\n// Calcula as porcentagens\nvar total = bonsTotal + ruinsTotal;\nvar bonsPc = Math.floor((bonsTotal / total) * 100);\nvar ruinsPc = Math.floor((ruinsTotal / total) * 100);\n\n// Atualiza a payload com os resultados\nmsg.payload.bons = Math.floor(bonsTotal);\nmsg.payload.ruins = Math.floor(ruinsTotal);\nmsg.payload.total = Math.floor(total);\nmsg.payload.bons_pc = bonsPc;\nmsg.payload.ruins_pc = ruinsPc;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "883997de3548f60f",
                "7508b0d2707ff2a4",
                "ddf4e2ed36b1e975",
                "b7b501af8d966eae",
                "2550832b6db8a2ae"
            ]
        ]
    },
    {
        "id": "e0f46b1477d960e3",
        "type": "debug",
        "z": "5a4975ebcc568c40",
        "name": "debug 49",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 400,
        "wires": []
    },
    {
        "id": "16eb0198dc45c14b",
        "type": "NGSI Entity",
        "z": "5a4975ebcc568c40",
        "name": "Ler entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriFarm:1",
        "entityType": "AgriFarm",
        "attrs": "production",
        "keyValues": "true",
        "dateModified": "false",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "e2e744092724b4c3",
                "e2a51c7e21d2e1e7",
                "af8a4116b921c3a4",
                "e0f46b1477d960e3",
                "3522e236c00ff658",
                "604cd866f6af5213"
            ]
        ]
    },
    {
        "id": "d82d641b722d2202",
        "type": "NGSI Entity",
        "z": "5a4975ebcc568c40",
        "name": "Excluir entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "delete",
        "entityId": "urn:ngsi-ld:AgriFarm:1",
        "entityType": "AgriFarm",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 320,
        "y": 500,
        "wires": [
            [
                "f6a7e44aa7832336"
            ]
        ]
    },
    {
        "id": "a6d8d42ee3c3501b",
        "type": "NGSI Entity",
        "z": "5a4975ebcc568c40",
        "name": "Criar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "upsert",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 320,
        "y": 460,
        "wires": [
            [
                "3dd45a752c03f51e",
                "d73ba755a72e7b99"
            ]
        ]
    },
    {
        "id": "c52fcc27eba9d501",
        "type": "NGSI Entity",
        "z": "5a4975ebcc568c40",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "upsert",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 530,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d73ba755a72e7b99",
        "type": "ui_form",
        "z": "5a4975ebcc568c40",
        "name": "",
        "label": "",
        "group": "a36d8b353b5ac62a",
        "order": 1,
        "width": 7,
        "height": 1,
        "options": [
            {
                "label": "Data",
                "value": "date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Bons (Dz)",
                "value": "good",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Ruins (Dz)",
                "value": "bad",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "date": "",
            "good": "",
            "bad": ""
        },
        "payload": "",
        "submit": "Enviar",
        "cancel": "Cancelar",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "6a145f72e48927de",
                "277a24589cab4a5c",
                "16eb0198dc45c14b",
                "6a63c4aa5cf46339"
            ]
        ]
    },
    {
        "id": "7572d7a139697137",
        "type": "ui_form",
        "z": "5a4975ebcc568c40",
        "d": true,
        "name": "",
        "label": "Excluir um registro de produção",
        "group": "3cdf104460b09eaf",
        "order": 2,
        "width": 7,
        "height": 1,
        "options": [
            {
                "label": "Identificador",
                "value": "id",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "Enviar",
        "cancel": "Cancelar",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 170,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "2550832b6db8a2ae",
        "type": "ui_text",
        "z": "5a4975ebcc568c40",
        "group": "cad099844726e2c2",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Total de ovos produzidos (Dz)",
        "format": "{{msg.payload.total}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 830,
        "y": 200,
        "wires": []
    },
    {
        "id": "b7b501af8d966eae",
        "type": "ui_text",
        "z": "5a4975ebcc568c40",
        "group": "cad099844726e2c2",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Total de ovos ruins (Dz)",
        "format": "{{msg.payload.ruins}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 810,
        "y": 160,
        "wires": []
    },
    {
        "id": "ddf4e2ed36b1e975",
        "type": "ui_text",
        "z": "5a4975ebcc568c40",
        "group": "cad099844726e2c2",
        "order": 4,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Total de ovos bons (Dz)",
        "format": "{{msg.payload.bons}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "9bb4846fcdc0c53e",
        "type": "ui_gauge",
        "z": "5a4975ebcc568c40",
        "name": "",
        "group": "a36d8b353b5ac62a",
        "order": 2,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "% Ovos ruins",
        "label": "%",
        "format": "{{bad_pc}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 200,
        "wires": []
    },
    {
        "id": "9834b9ff599c3e33",
        "type": "ui_gauge",
        "z": "5a4975ebcc568c40",
        "name": "",
        "group": "a36d8b353b5ac62a",
        "order": 3,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "% Ovos bons",
        "label": "%",
        "format": "{{good_pc}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 240,
        "wires": []
    },
    {
        "id": "883997de3548f60f",
        "type": "ui_gauge",
        "z": "5a4975ebcc568c40",
        "name": "",
        "group": "cad099844726e2c2",
        "order": 2,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "% Ovos bons",
        "label": "%",
        "format": "{{msg.payload.bons_pc}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 20,
        "wires": []
    },
    {
        "id": "7508b0d2707ff2a4",
        "type": "ui_gauge",
        "z": "5a4975ebcc568c40",
        "name": "",
        "group": "cad099844726e2c2",
        "order": 3,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "% Ovos ruins",
        "label": "%",
        "format": "{{msg.payload.ruins_pc}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "f77e83b984498625",
        "type": "ui_chart",
        "z": "5a4975ebcc568c40",
        "name": "",
        "group": "5c3af32dfbbc6bd9",
        "order": 2,
        "width": 21,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "bezier",
        "nodata": "Sem dados",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6a145f72e48927de",
        "type": "ui_table",
        "z": "5a4975ebcc568c40",
        "group": "3cdf104460b09eaf",
        "name": "",
        "order": 1,
        "width": 21,
        "height": 5,
        "columns": [
            {
                "field": "id",
                "title": "Identificador",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Data",
                "title": "Data",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Bons",
                "title": "Ovos bons (Dz)",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Ruins",
                "title": "Ovos ruins (Dz)",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Total",
                "title": "Total (Dz)",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 370,
        "y": 280,
        "wires": []
    },
    {
        "id": "f5faf96a5e36b219",
        "type": "inject",
        "z": "5a4975ebcc568c40",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "050199a148fc025c"
            ]
        ]
    },
    {
        "id": "2de52abb8b776671",
        "type": "debug",
        "z": "5a4975ebcc568c40",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "050199a148fc025c",
        "type": "FIWARE version",
        "z": "5a4975ebcc568c40",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "x": 320,
        "y": 660,
        "wires": [
            [
                "2de52abb8b776671"
            ]
        ]
    },
    {
        "id": "b949edc845948e33",
        "type": "debug",
        "z": "5a4975ebcc568c40",
        "name": "debug 52",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 360,
        "wires": []
    },
    {
        "id": "9702703ddf8de5fb",
        "type": "inject",
        "z": "5a4975ebcc568c40",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "16eb0198dc45c14b"
            ]
        ]
    },
    {
        "id": "3522e236c00ff658",
        "type": "function",
        "z": "5a4975ebcc568c40",
        "name": "function 39",
        "func": "var input = msg.payload;\n\nvar arrData = [];\nvar arrRuins = [];\n\nfor (var i = 0; i < input.production.length; i++) {\n    var item = input.production[i];\n    arrData.push(item.Data);\n    arrRuins.push(item.Ruins);\n}\n\n// Função auxiliar para ordenar os dados cronologicamente\nfunction sortByDate(data, ruins) {\n    var sortedData = [];\n    var sortedRuins = [];\n\n    // Cria um array de objetos com os dados e o total de ruins\n    var dataWithRuins = data.map(function (value, index) {\n        var dateParts = value.split('/');\n        var day = parseInt(dateParts[0], 10);\n        var month = parseInt(dateParts[1], 10) - 1; // Subtraímos 1 para corresponder aos meses no formato Date (0-11)\n        var year = parseInt(dateParts[2], 10) + 2000; // Adicionamos 2000 para obter o ano no formato completo\n\n        return { data: new Date(year, month, day), ruins: ruins[index] };\n    });\n\n    // Ordena o array de objetos com base na propriedade \"data\"\n    dataWithRuins.sort(function (a, b) {\n        return a.data - b.data;\n    });\n\n    // Separa os dados ordenados em arrays separados\n    dataWithRuins.forEach(function (item) {\n        sortedData.push(formatarData(item.data));\n        sortedRuins.push(item.ruins);\n    });\n\n    return { data: sortedData, ruins: sortedRuins };\n}\n\n// Função auxiliar para formatar a data no formato \"DD/MM/AA\"\nfunction formatarData(data) {\n    var dia = data.getDate();\n    var mes = data.getMonth() + 1;\n    var ano = data.getFullYear().toString().substr(-2);\n\n    dia = (dia < 10) ? '0' + dia : dia;\n    mes = (mes < 10) ? '0' + mes : mes;\n\n    return dia + '/' + mes + '/' + ano;\n}\n\n// Ordena os dados cronologicamente\nvar sortedData = sortByDate(arrData, arrRuins);\n\nfunction formatData(data, ruins) {\n    const dataObject = [{\n        \"series\": [\"Ruins (Dz)\"],\n        \"data\": [ruins],\n        \"labels\": data\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(sortedData.data, sortedData.ruins);\nreturn { payload: result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 300,
        "wires": [
            [
                "aea958d4d243e1bd"
            ]
        ]
    },
    {
        "id": "aea958d4d243e1bd",
        "type": "ui_chart",
        "z": "5a4975ebcc568c40",
        "name": "",
        "group": "5c3af32dfbbc6bd9",
        "order": 8,
        "width": 21,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "bezier",
        "nodata": "Sem dados",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "caff553054b529fa",
        "type": "ui_chart",
        "z": "5a4975ebcc568c40",
        "name": "",
        "group": "5c3af32dfbbc6bd9",
        "order": 5,
        "width": 21,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "bezier",
        "nodata": "Sem dados",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ca02c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "604cd866f6af5213",
        "type": "function",
        "z": "5a4975ebcc568c40",
        "name": "function 40",
        "func": "var input = msg.payload;\n\nvar arrData = [];\nvar arrBons = [];\n\nfor (var i = 0; i < input.production.length; i++) {\n    var item = input.production[i];\n    arrData.push(item.Data);\n    arrBons.push(item.Bons);\n}\n\n// Função auxiliar para ordenar os dados cronologicamente\nfunction sortByDate(data, bons) {\n    var sortedData = [];\n    var sortedBons = [];\n\n    // Cria um array de objetos com os dados e o total de bons\n    var dataWithBons = data.map(function (value, index) {\n        var dateParts = value.split('/');\n        var day = parseInt(dateParts[0], 10);\n        var month = parseInt(dateParts[1], 10) - 1; // Subtraímos 1 para corresponder aos meses no formato Date (0-11)\n        var year = parseInt(dateParts[2], 10) + 2000; // Adicionamos 2000 para obter o ano no formato completo\n\n        return { data: new Date(year, month, day), bons: bons[index] };\n    });\n\n    // Ordena o array de objetos com base na propriedade \"data\"\n    dataWithBons.sort(function (a, b) {\n        return a.data - b.data;\n    });\n\n    // Separa os dados ordenados em arrays separados\n    dataWithBons.forEach(function (item) {\n        sortedData.push(formatarData(item.data));\n        sortedBons.push(item.bons);\n    });\n\n    return { data: sortedData, bons: sortedBons };\n}\n\n// Função auxiliar para formatar a data no formato \"DD/MM/AA\"\nfunction formatarData(data) {\n    var dia = data.getDate();\n    var mes = data.getMonth() + 1;\n    var ano = data.getFullYear().toString().substr(-2);\n\n    dia = (dia < 10) ? '0' + dia : dia;\n    mes = (mes < 10) ? '0' + mes : mes;\n\n    return dia + '/' + mes + '/' + ano;\n}\n\n// Ordena os dados cronologicamente\nvar sortedData = sortByDate(arrData, arrBons);\n\nfunction formatData(data, bons) {\n    const dataObject = [{\n        \"series\": [\"Bons\"],\n        \"data\": [bons],\n        \"labels\": data\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(sortedData.data, sortedData.bons);\nreturn { payload: result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 340,
        "wires": [
            [
                "caff553054b529fa"
            ]
        ]
    },
    {
        "id": "452ea0297e21c338",
        "type": "ui_text",
        "z": "5a4975ebcc568c40",
        "group": "5c3af32dfbbc6bd9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gráfico de produção total (Dz)",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1330,
        "y": 260,
        "wires": []
    },
    {
        "id": "9e1c5e922b03a7cd",
        "type": "ui_text",
        "z": "5a4975ebcc568c40",
        "group": "5c3af32dfbbc6bd9",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gráfico de ovos Ruins (Dz)",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1320,
        "y": 300,
        "wires": []
    },
    {
        "id": "21d13f2588c69ecf",
        "type": "ui_text",
        "z": "5a4975ebcc568c40",
        "group": "5c3af32dfbbc6bd9",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gráfico de ovos Bons (Dz)",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1320,
        "y": 340,
        "wires": []
    },
    {
        "id": "ba55211f49be6041",
        "type": "debug",
        "z": "5a4975ebcc568c40",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 560,
        "wires": []
    },
    {
        "id": "a90fc179b04fa4b9",
        "type": "inject",
        "z": "5a4975ebcc568c40",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 370,
        "y": 560,
        "wires": [
            [
                "9a0275492d32f18f"
            ]
        ]
    },
    {
        "id": "9a0275492d32f18f",
        "type": "NGSI Attribute",
        "z": "5a4975ebcc568c40",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriFarm:1",
        "entityType": "AgriFarm",
        "attrName": "payload[0]",
        "metadata": "",
        "skipForwarding": "false",
        "overrideMetadata": "false",
        "forcedUpdate": "false",
        "flowControl": "false",
        "x": 560,
        "y": 560,
        "wires": [
            [
                "ba55211f49be6041"
            ]
        ]
    },
    {
        "id": "0252f9c4489d9798",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler temperatura",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[6].main.temp",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 280,
        "wires": [
            [
                "16afc9ebb630f056"
            ]
        ]
    },
    {
        "id": "0d1461ad42469804",
        "type": "comment",
        "z": "e9c6344b196bfe35",
        "name": "Lê a temperatura e umidade na entidade criada e envia os valores ao gauge",
        "info": "",
        "x": 290,
        "y": 280,
        "wires": []
    },
    {
        "id": "bef85147cc338e80",
        "type": "comment",
        "z": "e9c6344b196bfe35",
        "name": "Lê a temperatura de São Carlos através do openweather e cria entidade no Helix",
        "info": "",
        "x": 300,
        "y": 40,
        "wires": []
    },
    {
        "id": "1a0a66ea7842d47f",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler umidade",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[6].main.humidity",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 220,
        "wires": [
            [
                "b5dc477e47e6b526"
            ]
        ]
    },
    {
        "id": "21623a29323ae2e7",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler descrição",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[6].weather.description",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 400,
        "wires": [
            [
                "8db7413ff67d9198"
            ]
        ]
    },
    {
        "id": "02355036c3c6d4a9",
        "type": "inject",
        "z": "e9c6344b196bfe35",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 90,
        "y": 340,
        "wires": [
            [
                "730cd46dbf699057"
            ]
        ]
    },
    {
        "id": "6be3768fae066be9",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler sensação",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[6].main.feels_like",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 340,
        "wires": [
            [
                "bc816e89f15ae988"
            ]
        ]
    },
    {
        "id": "bbe5baf0e74b1887",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[6].dt_txt",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 460,
        "wires": [
            [
                "5fdc89fc9d748839"
            ]
        ]
    },
    {
        "id": "7395d86efbcfc153",
        "type": "inject",
        "z": "e9c6344b196bfe35",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "72861beacd1fd44c"
            ]
        ]
    },
    {
        "id": "c02a53c4a49a5f9a",
        "type": "comment",
        "z": "e9c6344b196bfe35",
        "name": "Dia 1",
        "info": "",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "fc2ff41ae09993e5",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler temperatura",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[14].main.temp",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 640,
        "wires": [
            [
                "fbb477e1a93636cc"
            ]
        ]
    },
    {
        "id": "ad54b7ec5ec9efec",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler umidade",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[14].main.humidity",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 580,
        "wires": [
            [
                "6d7b49c44b4506d7"
            ]
        ]
    },
    {
        "id": "b945025135b49210",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler descrição",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[14].weather.description",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 760,
        "wires": [
            [
                "2445819ac99b110e"
            ]
        ]
    },
    {
        "id": "652c216509b6e166",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler sensação",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[14].main.feels_like",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 700,
        "wires": [
            [
                "0a3e027afd2bb451"
            ]
        ]
    },
    {
        "id": "1ff090e23ae833b9",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[14].dt_txt",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 820,
        "wires": [
            [
                "3f6414e57b6ac39d"
            ]
        ]
    },
    {
        "id": "90700cde45b68eb2",
        "type": "comment",
        "z": "e9c6344b196bfe35",
        "name": "Dia 2",
        "info": "",
        "x": 790,
        "y": 520,
        "wires": []
    },
    {
        "id": "5fdc89fc9d748839",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 16",
        "func": "const formatDate = (dateTimeString) => {\n    const dateTimeParts = dateTimeString.split(\" \");\n    const dateParts = dateTimeParts[0].split(\"-\");\n    const year = dateParts[0].substring(2); // Obtém os dois últimos dígitos do ano\n    const month = dateParts[1];\n    const day = dateParts[2];\n\n    return `${day}/${month}/${year}`;\n};\n\n// Substitua msg.payload pela sua string de entrada no formato \"AAAA-MM-DD HH:MM:SS\"\nconst inputDateString = msg.payload;\nconst outputDateString = formatDate(inputDateString);\n\nreturn { payload: outputDateString };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 460,
        "wires": [
            [
                "80d13eab22dbc307"
            ]
        ]
    },
    {
        "id": "3f6414e57b6ac39d",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 17",
        "func": "const formatDate = (dateTimeString) => {\n    const dateTimeParts = dateTimeString.split(\" \");\n    const dateParts = dateTimeParts[0].split(\"-\");\n    const year = dateParts[0].substring(2); // Obtém os dois últimos dígitos do ano\n    const month = dateParts[1];\n    const day = dateParts[2];\n\n    return `${day}/${month}/${year}`;\n};\n\n// Substitua msg.payload pela sua string de entrada no formato \"AAAA-MM-DD HH:MM:SS\"\nconst inputDateString = msg.payload;\nconst outputDateString = formatDate(inputDateString);\n\nreturn { payload: outputDateString };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 820,
        "wires": [
            [
                "955e9c7b5a4c5c2b"
            ]
        ]
    },
    {
        "id": "5a83d1f31c5f405b",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler temperatura",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[22].main.temp",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1000,
        "wires": [
            [
                "29c651765b79bd63"
            ]
        ]
    },
    {
        "id": "75f7d60091aa9927",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler umidade",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[22].main.humidity",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 940,
        "wires": [
            [
                "1fe993b80fe2b76a"
            ]
        ]
    },
    {
        "id": "9ab7bb19cf8a0c31",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler descrição",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[22].weather.description",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1120,
        "wires": [
            [
                "69f7b2b02defc6bc"
            ]
        ]
    },
    {
        "id": "be63df0772967215",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler sensação",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[22].main.feels_like",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1060,
        "wires": [
            [
                "b277b3d88f79d83b"
            ]
        ]
    },
    {
        "id": "5bdde805424b1c0a",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[22].dt_txt",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1180,
        "wires": [
            [
                "379a04cee07eed66"
            ]
        ]
    },
    {
        "id": "f617af44cce35f97",
        "type": "comment",
        "z": "e9c6344b196bfe35",
        "name": "Dia 3",
        "info": "",
        "x": 790,
        "y": 880,
        "wires": []
    },
    {
        "id": "379a04cee07eed66",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 18",
        "func": "const formatDate = (dateTimeString) => {\n    const dateTimeParts = dateTimeString.split(\" \");\n    const dateParts = dateTimeParts[0].split(\"-\");\n    const year = dateParts[0].substring(2); // Obtém os dois últimos dígitos do ano\n    const month = dateParts[1];\n    const day = dateParts[2];\n\n    return `${day}/${month}/${year}`;\n};\n\n// Substitua msg.payload pela sua string de entrada no formato \"AAAA-MM-DD HH:MM:SS\"\nconst inputDateString = msg.payload;\nconst outputDateString = formatDate(inputDateString);\n\nreturn { payload: outputDateString };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1180,
        "wires": [
            [
                "7fbc8a2c77e467cf"
            ]
        ]
    },
    {
        "id": "40810f6c8e472922",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler temperatura",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[29].main.temp",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1360,
        "wires": [
            [
                "9c7d5908a0811621"
            ]
        ]
    },
    {
        "id": "62012dc0371ece13",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler umidade",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[29].main.humidity",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1300,
        "wires": [
            [
                "15ac4cc315de3b84"
            ]
        ]
    },
    {
        "id": "f857482ae5d5d58d",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler descrição",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[29].weather.description",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1480,
        "wires": [
            [
                "56b07d62081f6ce0"
            ]
        ]
    },
    {
        "id": "48828fcdb1214146",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler sensação",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[29].main.feels_like",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1420,
        "wires": [
            [
                "c7143ad308fea8c3"
            ]
        ]
    },
    {
        "id": "85f30e630ba54290",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[29].dt_txt",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1540,
        "wires": [
            [
                "7c2f3dc7e25bfc34"
            ]
        ]
    },
    {
        "id": "a798e95d226e78d1",
        "type": "comment",
        "z": "e9c6344b196bfe35",
        "name": "Dia 4",
        "info": "",
        "x": 790,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7c2f3dc7e25bfc34",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 19",
        "func": "const formatDate = (dateTimeString) => {\n    const dateTimeParts = dateTimeString.split(\" \");\n    const dateParts = dateTimeParts[0].split(\"-\");\n    const year = dateParts[0].substring(2); // Obtém os dois últimos dígitos do ano\n    const month = dateParts[1];\n    const day = dateParts[2];\n\n    return `${day}/${month}/${year}`;\n};\n\n// Substitua msg.payload pela sua string de entrada no formato \"AAAA-MM-DD HH:MM:SS\"\nconst inputDateString = msg.payload;\nconst outputDateString = formatDate(inputDateString);\n\nreturn { payload: outputDateString };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1540,
        "wires": [
            [
                "a9ae231a74d015b8"
            ]
        ]
    },
    {
        "id": "d8c663c7a33f58d8",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler temperatura",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[37].main.temp",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1720,
        "wires": [
            [
                "3eb3abf4cb4b1934"
            ]
        ]
    },
    {
        "id": "688a305e045f3bfd",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler umidade",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[37].main.humidity",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1660,
        "wires": [
            [
                "ad1ff42007075f23"
            ]
        ]
    },
    {
        "id": "f096b7e82acc76c4",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler descrição",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[37].weather.description",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1840,
        "wires": [
            [
                "a2ba4abc75e8dccf"
            ]
        ]
    },
    {
        "id": "8936d89aa7d7e418",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler sensação",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[37].main.feels_like",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1780,
        "wires": [
            [
                "c7621f2fa76bf253"
            ]
        ]
    },
    {
        "id": "c5833de581bbcba6",
        "type": "change",
        "z": "e9c6344b196bfe35",
        "name": "Ler data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[37].dt_txt",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1900,
        "wires": [
            [
                "bae6f940485fc62c"
            ]
        ]
    },
    {
        "id": "7fab6831d078463b",
        "type": "comment",
        "z": "e9c6344b196bfe35",
        "name": "Dia 5",
        "info": "",
        "x": 790,
        "y": 1600,
        "wires": []
    },
    {
        "id": "bae6f940485fc62c",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 20",
        "func": "const formatDate = (dateTimeString) => {\n    const dateTimeParts = dateTimeString.split(\" \");\n    const dateParts = dateTimeParts[0].split(\"-\");\n    const year = dateParts[0].substring(2); // Obtém os dois últimos dígitos do ano\n    const month = dateParts[1];\n    const day = dateParts[2];\n\n    return `${day}/${month}/${year}`;\n};\n\n// Substitua msg.payload pela sua string de entrada no formato \"AAAA-MM-DD HH:MM:SS\"\nconst inputDateString = msg.payload;\nconst outputDateString = formatDate(inputDateString);\n\nreturn { payload: outputDateString };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1900,
        "wires": [
            [
                "ac427215dd682383"
            ]
        ]
    },
    {
        "id": "16afc9ebb630f056",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 21",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 280,
        "wires": [
            [
                "74baef89a2afdeb2"
            ]
        ]
    },
    {
        "id": "bc816e89f15ae988",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 22",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 340,
        "wires": [
            [
                "99bd550cacacad5f"
            ]
        ]
    },
    {
        "id": "fbb477e1a93636cc",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 23",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 640,
        "wires": [
            [
                "d7bcb87d76f12f58"
            ]
        ]
    },
    {
        "id": "0a3e027afd2bb451",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 24",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 700,
        "wires": [
            [
                "478498243d512028"
            ]
        ]
    },
    {
        "id": "29c651765b79bd63",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 25",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1000,
        "wires": [
            [
                "6c5d11e1cedc3e0a"
            ]
        ]
    },
    {
        "id": "b277b3d88f79d83b",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 26",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1060,
        "wires": [
            [
                "9b9d9bc3a62c28d0"
            ]
        ]
    },
    {
        "id": "9c7d5908a0811621",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 27",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1360,
        "wires": [
            [
                "73735147a402a156"
            ]
        ]
    },
    {
        "id": "c7143ad308fea8c3",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 28",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1420,
        "wires": [
            [
                "c264973a9a9edc0a"
            ]
        ]
    },
    {
        "id": "3eb3abf4cb4b1934",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 29",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1720,
        "wires": [
            [
                "dcdf58946ffd02d4"
            ]
        ]
    },
    {
        "id": "c7621f2fa76bf253",
        "type": "function",
        "z": "e9c6344b196bfe35",
        "name": "function 30",
        "func": "// Arredonda um número para o número inteiro mais próximo\nconst roundedNumber = Math.round(msg.payload);\n\n// Cria uma nova mensagem com o número arredondado\nconst newMsg = { payload: roundedNumber };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1780,
        "wires": [
            [
                "d647fc87cf42f108"
            ]
        ]
    },
    {
        "id": "730cd46dbf699057",
        "type": "NGSI Entity",
        "z": "e9c6344b196bfe35",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:OpenWeatherMapForecast:undefined",
        "entityType": "OpenWeatherMapForecast",
        "attrs": "list",
        "keyValues": "false",
        "dateModified": "false",
        "x": 250,
        "y": 340,
        "wires": [
            [
                "fab8a65c1638d405"
            ]
        ]
    },
    {
        "id": "fab8a65c1638d405",
        "type": "NGSI Attribute value",
        "z": "e9c6344b196bfe35",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "",
        "entityType": "",
        "attrName": "list",
        "skipForwarding": "false",
        "forcedUpdate": "false",
        "flowControl": "false",
        "x": 460,
        "y": 340,
        "wires": [
            [
                "0252f9c4489d9798",
                "1a0a66ea7842d47f",
                "6be3768fae066be9",
                "21623a29323ae2e7",
                "bbe5baf0e74b1887",
                "ad54b7ec5ec9efec",
                "fc2ff41ae09993e5",
                "652c216509b6e166",
                "b945025135b49210",
                "1ff090e23ae833b9",
                "75f7d60091aa9927",
                "5a83d1f31c5f405b",
                "be63df0772967215",
                "9ab7bb19cf8a0c31",
                "5bdde805424b1c0a",
                "62012dc0371ece13",
                "40810f6c8e472922",
                "48828fcdb1214146",
                "f857482ae5d5d58d",
                "85f30e630ba54290",
                "688a305e045f3bfd",
                "d8c663c7a33f58d8",
                "8936d89aa7d7e418",
                "f096b7e82acc76c4",
                "c5833de581bbcba6"
            ]
        ]
    },
    {
        "id": "3f130cce7c1bf071",
        "type": "OpenWeatherMap to NGSI",
        "z": "e9c6344b196bfe35",
        "name": "WeatherToNGSI",
        "x": 540,
        "y": 100,
        "wires": [
            [
                "61400ee6d6e3cc87"
            ]
        ]
    },
    {
        "id": "8db7413ff67d9198",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Situação:",
        "format": " {{value}}",
        "layout": "col-center",
        "className": "",
        "x": 860,
        "y": 400,
        "wires": []
    },
    {
        "id": "80d13eab22dbc307",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Data:",
        "format": " {{value}}",
        "layout": "row-center",
        "className": "",
        "x": 970,
        "y": 460,
        "wires": []
    },
    {
        "id": "2445819ac99b110e",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Situação:",
        "format": " {{value}}",
        "layout": "col-center",
        "className": "",
        "x": 860,
        "y": 760,
        "wires": []
    },
    {
        "id": "955e9c7b5a4c5c2b",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Data:",
        "format": " {{value}}",
        "layout": "row-center",
        "className": "",
        "x": 970,
        "y": 820,
        "wires": []
    },
    {
        "id": "69f7b2b02defc6bc",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Situação:",
        "format": " {{value}}",
        "layout": "col-center",
        "className": "",
        "x": 860,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7fbc8a2c77e467cf",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Data:",
        "format": " {{value}}",
        "layout": "row-center",
        "className": "",
        "x": 970,
        "y": 1180,
        "wires": []
    },
    {
        "id": "56b07d62081f6ce0",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 27,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Situação:",
        "format": " {{value}}",
        "layout": "col-center",
        "className": "",
        "x": 860,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a9ae231a74d015b8",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 23,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Data:",
        "format": " {{value}}",
        "layout": "row-center",
        "className": "",
        "x": 970,
        "y": 1540,
        "wires": []
    },
    {
        "id": "a2ba4abc75e8dccf",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 34,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Situação:",
        "format": " {{value}}",
        "layout": "col-center",
        "className": "",
        "x": 860,
        "y": 1840,
        "wires": []
    },
    {
        "id": "ac427215dd682383",
        "type": "ui_text",
        "z": "e9c6344b196bfe35",
        "group": "42598b0cf938942f",
        "order": 30,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Data:",
        "format": " {{value}}",
        "layout": "row-center",
        "className": "",
        "x": 970,
        "y": 1900,
        "wires": []
    },
    {
        "id": "74baef89a2afdeb2",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 4,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 280,
        "wires": []
    },
    {
        "id": "b5dc477e47e6b526",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 5,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Umidade",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 860,
        "y": 220,
        "wires": []
    },
    {
        "id": "99bd550cacacad5f",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 3,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Sensação térmica",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 340,
        "wires": []
    },
    {
        "id": "6d7b49c44b4506d7",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 12,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Umidade",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 860,
        "y": 580,
        "wires": []
    },
    {
        "id": "6c5d11e1cedc3e0a",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 18,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1fe993b80fe2b76a",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 19,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Umidade",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 860,
        "y": 940,
        "wires": []
    },
    {
        "id": "9b9d9bc3a62c28d0",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 17,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Sensação térmica",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 1060,
        "wires": []
    },
    {
        "id": "73735147a402a156",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 25,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1360,
        "wires": []
    },
    {
        "id": "15ac4cc315de3b84",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 26,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Umidade",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 860,
        "y": 1300,
        "wires": []
    },
    {
        "id": "c264973a9a9edc0a",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 24,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Sensação térmica",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 1420,
        "wires": []
    },
    {
        "id": "dcdf58946ffd02d4",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 32,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1720,
        "wires": []
    },
    {
        "id": "ad1ff42007075f23",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 33,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Umidade",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 860,
        "y": 1660,
        "wires": []
    },
    {
        "id": "d647fc87cf42f108",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 31,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Sensação térmica",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 1780,
        "wires": []
    },
    {
        "id": "d7bcb87d76f12f58",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 11,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 640,
        "wires": []
    },
    {
        "id": "478498243d512028",
        "type": "ui_gauge",
        "z": "e9c6344b196bfe35",
        "name": "",
        "group": "42598b0cf938942f",
        "order": 10,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Sensação térmica",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#1f77b4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 700,
        "wires": []
    },
    {
        "id": "72861beacd1fd44c",
        "type": "openweathermap",
        "z": "e9c6344b196bfe35",
        "name": "",
        "wtype": "forecast",
        "lon": "",
        "lat": "",
        "city": "Santa Rita do Passa Quatro",
        "country": "Brasil",
        "language": "pt",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "3f130cce7c1bf071"
            ]
        ]
    },
    {
        "id": "68852a07457014f8",
        "type": "debug",
        "z": "e9c6344b196bfe35",
        "name": "debug 50",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 100,
        "wires": []
    },
    {
        "id": "61400ee6d6e3cc87",
        "type": "NGSI Entity",
        "z": "e9c6344b196bfe35",
        "name": "Criar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "upsert",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 760,
        "y": 100,
        "wires": [
            [
                "68852a07457014f8"
            ]
        ]
    },
    {
        "id": "e8728d79043dcd53",
        "type": "inject",
        "z": "ea538592da2e51e2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"urn:ngsi-ld:AgriProductType:HistData\",\"type\":\"AgriProductType\",\"name\":\"HistData\",\"description\":\"Dados históricos da produção da FESA\",\"day\":[\"16/07/21\",\"23/07/21\",\"30/07/21\",\"03/08/21\",\"09/08/21\",\"17/08/21\",\"24/08/21\",\"31/08/21\",\"08/09/21\",\"14/09/21\",\"20/09/21\",\"27/09/21\",\"05/10/21\",\"15/10/21\",\"22/10/21\",\"26/10/21\",\"03/11/21\",\"09/11/21\",\"16/11/21\",\"23/11/21\",\"30/11/21\",\"07/12/21\",\"14/12/21\",\"20/12/21\",\"28/12/21\",\"04/01/22\",\"11/01/22\",\"18/01/22\",\"25/01/22\",\"01/02/22\",\"08/02/22\",\"15/02/22\",\"22/02/22\",\"04/03/22\",\"08/03/22\",\"15/03/22\",\"22/03/22\",\"29/03/22\",\"05/04/22\",\"12/04/22\",\"19/04/22\",\"26/04/22\",\"03/05/22\",\"10/05/22\",\"17/05/22\",\"24/05/22\",\"31/05/22\",\"07/06/22\",\"14/06/22\",\"20/06/22\",\"27/06/22\",\"05/07/22\",\"11/07/22\",\"20/07/22\",\"25/07/22\",\"02/08/22\"],\"production\":[553,718,677,677.5,732,778,755.5,790,899.5,684,793,791,758.5,980,549,761,864,631,726,743,755,752.5,760.5,753,767,762.5,758,754,763,766.5,760,768.5,764,1084,430,742.5,736.75,729.5,738,729,728.5,725.5,722,724.5,722,715.5,718,712,709,700.5,688.75,680.5,688.5,686,685,677.5],\"temperature\":[19.68,17.18,16.14,16.4,19.05,22.28,22.98,19.56,25.01,24.34,24.68,23.99,22.3,21.41,19.4,22.14,22.47,22.63,21.61,23.04,22.91,21.18,23.01,22.53,22.06,21.62,21.17,23.4,25.31,20.71,22.29,23,23.23,22.51,22.3,22.36,22.44,21,21.6,21.28,19.75,21.01,21,17.94,17.78,12.81,18.79,18.9,16.64,16.89,18.37,18.15,18.46,19.92,20.64,19.09],\"price\":[6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.53,6.58,6.58,6.58,6.58,6.58,6.58,6.75,6.75,6.75,6.75,6.75,6.75,6.75,6.75,6.75,6.75,6.75,6.75,6.75,7.5,7.5,7.5,7.5,7.5,7.5,7.5,7.5,7.5,7.5,7.5,7.5],\"humidity\":[49.25,43.34,52.9,57.84,52.86,46.39,39.49,61.13,43.35,52.54,45.09,52.12,68.9,70.81,74.96,71.22,66.33,65.33,64.4,59.27,71.4,67.3,73.86,70.43,71.37,86.4,80.69,73.97,66.05,90.87,79.33,73.82,73.74,62.33,60.05,80.1,71.95,65,75,71.06,67.42,60.05,74.78,77.58,65.47,62.99,75.31,77.65,69.24,64.59,64.27,56.46,56.04,56.99,56.04,45.02]}",
        "payloadType": "json",
        "x": 210,
        "y": 60,
        "wires": [
            [
                "08acb9ef9b9a196b"
            ]
        ]
    },
    {
        "id": "31e2c2c9f2bff06a",
        "type": "debug",
        "z": "ea538592da2e51e2",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "2b9d1c447b319764",
        "type": "inject",
        "z": "ea538592da2e51e2",
        "name": "Ler",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "09edde87b1151caa"
            ]
        ]
    },
    {
        "id": "3b8edefc28c4b4b9",
        "type": "debug",
        "z": "ea538592da2e51e2",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 120,
        "wires": []
    },
    {
        "id": "8a417641ccdad007",
        "type": "inject",
        "z": "ea538592da2e51e2",
        "name": "Apagar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "dc1fa2f61edf8dcf"
            ]
        ]
    },
    {
        "id": "3221bff9bd14abea",
        "type": "debug",
        "z": "ea538592da2e51e2",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "3b2f49372141d86a",
        "type": "inject",
        "z": "ea538592da2e51e2",
        "name": "Leitura",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "509a19c86427a95d"
            ]
        ]
    },
    {
        "id": "03613652237fdf8d",
        "type": "function",
        "z": "ea538592da2e51e2",
        "name": "Temperatura",
        "func": "var arr1 = msg.payload.temperature.value;\nvar arr2 = msg.payload.day.value;\n\nfunction formatData(arr1, arr2) {\n    const dataObject = [{\n        \"series\": [\"Temperatura média do dia (em ºC)\"],\n        \"data\": [arr1],\n        \"labels\": arr2\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(arr1, arr2);\nreturn {payload : result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 280,
        "wires": [
            [
                "b0459ef3cfd438e4"
            ]
        ]
    },
    {
        "id": "21fc1e4f402a5d85",
        "type": "function",
        "z": "ea538592da2e51e2",
        "name": "Preço",
        "func": "var arr1 = msg.payload.price.value;\nvar arr2 = msg.payload.day.value;\n\nfunction formatData(arr1, arr2) {\n    const dataObject = [{\n        \"series\": [\"Preço do ovo no dia por dúzia (em reais)\"],\n        \"data\": [arr1],\n        \"labels\": arr2\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(arr1, arr2);\nreturn {payload : result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 480,
        "wires": [
            [
                "433a3070b8e931dd"
            ]
        ]
    },
    {
        "id": "4eda1b612198c8dc",
        "type": "function",
        "z": "ea538592da2e51e2",
        "name": "Produção",
        "func": "var arr1 = msg.payload.production.value;\nvar arr2 = msg.payload.day.value;\n\nfunction formatData(arr1, arr2) {\n    const dataObject = [{\n        \"series\": [\"Produção semanal do ovo registrada no dia (em dúzia)\"],\n        \"data\": [arr1],\n        \"labels\": arr2\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(arr1, arr2);\nreturn {payload : result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "6d58b88fafd4f876"
            ]
        ]
    },
    {
        "id": "689701499a0a962b",
        "type": "function",
        "z": "ea538592da2e51e2",
        "name": "Umidade",
        "func": "var arr1 = msg.payload.humidity.value;\nvar arr2 = msg.payload.day.value;\n\nfunction formatData(arr1, arr2) {\n    const dataObject = [{\n        \"series\": [\"Umidade relativa do ar (em %)\"],\n        \"data\": [arr1],\n        \"labels\": arr2\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(arr1, arr2);\nreturn {payload : result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 340,
        "wires": [
            [
                "5df3657aae8cfd7b"
            ]
        ]
    },
    {
        "id": "08acb9ef9b9a196b",
        "type": "NGSI Entity",
        "z": "ea538592da2e51e2",
        "name": "Criar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "create",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 380,
        "y": 60,
        "wires": [
            [
                "31e2c2c9f2bff06a"
            ]
        ]
    },
    {
        "id": "09edde87b1151caa",
        "type": "NGSI Entity",
        "z": "ea538592da2e51e2",
        "name": "Ler entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:HistData",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "3b8edefc28c4b4b9"
            ]
        ]
    },
    {
        "id": "dc1fa2f61edf8dcf",
        "type": "NGSI Entity",
        "z": "ea538592da2e51e2",
        "name": "Excluir entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "delete",
        "entityId": "urn:ngsi-ld:AgriProductType:HistData",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 420,
        "y": 180,
        "wires": [
            [
                "3221bff9bd14abea"
            ]
        ]
    },
    {
        "id": "509a19c86427a95d",
        "type": "NGSI Entity",
        "z": "ea538592da2e51e2",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:HistData",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "03613652237fdf8d",
                "4eda1b612198c8dc",
                "689701499a0a962b",
                "21fc1e4f402a5d85"
            ]
        ]
    },
    {
        "id": "65e2c204b755460f",
        "type": "ui_text",
        "z": "ea538592da2e51e2",
        "group": "8e1d1b289722c345",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fonte: INMET SP (Dados da cidade de São Carlos, SP)",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 430,
        "y": 540,
        "wires": []
    },
    {
        "id": "0946b58e337a1167",
        "type": "ui_text",
        "z": "ea538592da2e51e2",
        "group": "8e1d1b289722c345",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Fonte: Agroindustrial Salvador arena",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 470,
        "y": 600,
        "wires": []
    },
    {
        "id": "830c6af1143a0d8e",
        "type": "ui_text",
        "z": "ea538592da2e51e2",
        "group": "8e1d1b289722c345",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fonte: (CEAGESP - Araraquara) http://dw.ceasa.gov.br/",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 530,
        "y": 660,
        "wires": []
    },
    {
        "id": "b0459ef3cfd438e4",
        "type": "ui_chart",
        "z": "ea538592da2e51e2",
        "name": "",
        "group": "8e1d1b289722c345",
        "order": 1,
        "width": 23,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "l",
        "interpolate": "bezier",
        "nodata": "no data",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#2ca02c",
            "#ff7f0e",
            "#a4c1c9",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "433a3070b8e931dd",
        "type": "ui_chart",
        "z": "ea538592da2e51e2",
        "name": "",
        "group": "8e1d1b289722c345",
        "order": 4,
        "width": 23,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "l",
        "interpolate": "bezier",
        "nodata": "no data",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#9467bd",
            "#2ca02c",
            "#ff7f0e",
            "#a4c1c9",
            "#98df8a",
            "#1f77b4",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "6d58b88fafd4f876",
        "type": "ui_chart",
        "z": "ea538592da2e51e2",
        "name": "",
        "group": "8e1d1b289722c345",
        "order": 6,
        "width": 23,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "l",
        "interpolate": "bezier",
        "nodata": "no data",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c8c2c",
            "#1f77b4",
            "#ff7f0e",
            "#a4c1c9",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "5df3657aae8cfd7b",
        "type": "ui_chart",
        "z": "ea538592da2e51e2",
        "name": "",
        "group": "8e1d1b289722c345",
        "order": 2,
        "width": 23,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "l",
        "interpolate": "bezier",
        "nodata": "no data",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#2ca02c",
            "#ff7f0e",
            "#a4c1c9",
            "#98df8a",
            "#1f77b4",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "671c4de675c48e82",
        "type": "inject",
        "z": "d768a6d29d0e02d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"urn:ngsi-ld:AgriProductType:EggAndCornNac\",\"type\":\"AgriProductType\",\"name\":\"EggAndCornNac\",\"description\":\"Preços nacionais do ovo e do milho\",\"day\":[\"09/01/15\",\"16/01/15\",\"23/01/15\",\"30/01/15\",\"06/02/15\",\"13/02/15\",\"20/02/15\",\"27/02/15\",\"06/03/15\",\"13/03/15\",\"20/03/15\",\"27/03/15\",\"03/04/15\",\"10/04/15\",\"17/04/15\",\"24/04/15\",\"01/05/15\",\"08/05/15\",\"15/05/15\",\"22/05/15\",\"29/05/15\",\"05/06/15\",\"12/06/15\",\"19/06/15\",\"26/06/15\",\"03/07/15\",\"10/07/15\",\"17/07/15\",\"24/07/15\",\"31/07/15\",\"07/08/15\",\"14/08/15\",\"21/08/15\",\"28/08/15\",\"04/09/15\",\"11/09/15\",\"18/09/15\",\"25/09/15\",\"02/10/15\",\"09/10/15\",\"16/10/15\",\"23/10/15\",\"30/10/15\",\"06/11/15\",\"13/11/15\",\"20/11/15\",\"27/11/15\",\"04/12/15\",\"11/12/15\",\"18/12/15\",\"25/12/15\",\"01/01/16\",\"08/01/16\",\"15/01/16\",\"22/01/16\",\"29/01/16\",\"05/02/16\",\"12/02/16\",\"19/02/16\",\"26/02/16\",\"04/03/16\",\"11/03/16\",\"18/03/16\",\"25/03/16\",\"01/04/16\",\"08/04/16\",\"15/04/16\",\"22/04/16\",\"29/04/16\",\"06/05/16\",\"13/05/16\",\"20/05/16\",\"27/05/16\",\"03/06/16\",\"10/06/16\",\"17/06/16\",\"24/06/16\",\"01/07/16\",\"08/07/16\",\"15/07/16\",\"22/07/16\",\"29/07/16\",\"05/08/16\",\"12/08/16\",\"19/08/16\",\"26/08/16\",\"02/09/16\",\"09/09/16\",\"16/09/16\",\"23/09/16\",\"30/09/16\",\"07/10/16\",\"14/10/16\",\"21/10/16\",\"28/10/16\",\"04/11/16\",\"11/11/16\",\"18/11/16\",\"25/11/16\",\"02/12/16\",\"09/12/16\",\"16/12/16\",\"23/12/16\",\"30/12/16\",\"06/01/17\",\"13/01/17\",\"20/01/17\",\"27/01/17\",\"03/02/17\",\"10/02/17\",\"17/02/17\",\"24/02/17\",\"03/03/17\",\"10/03/17\",\"17/03/17\",\"24/03/17\",\"31/03/17\",\"07/04/17\",\"14/04/17\",\"21/04/17\",\"28/04/17\",\"05/05/17\",\"12/05/17\",\"19/05/17\",\"26/05/17\",\"02/06/17\",\"09/06/17\",\"16/06/17\",\"23/06/17\",\"30/06/17\",\"07/07/17\",\"14/07/17\",\"21/07/17\",\"28/07/17\",\"04/08/17\",\"11/08/17\",\"18/08/17\",\"25/08/17\",\"01/09/17\",\"08/09/17\",\"15/09/17\",\"22/09/17\",\"29/09/17\",\"06/10/17\",\"13/10/17\",\"20/10/17\",\"27/10/17\",\"03/11/17\",\"10/11/17\",\"17/11/17\",\"24/11/17\",\"01/12/17\",\"08/12/17\",\"15/12/17\",\"22/12/17\",\"29/12/17\",\"05/01/18\",\"12/01/18\",\"19/01/18\",\"26/01/18\",\"02/02/18\",\"09/02/18\",\"16/02/18\",\"23/02/18\",\"02/03/18\",\"09/03/18\",\"16/03/18\",\"23/03/18\",\"30/03/18\",\"06/04/18\",\"13/04/18\",\"20/04/18\",\"27/04/18\",\"04/05/18\",\"11/05/18\",\"18/05/18\",\"25/05/18\",\"01/06/18\",\"08/06/18\",\"15/06/18\",\"22/06/18\",\"29/06/18\",\"06/07/18\",\"13/07/18\",\"20/07/18\",\"27/07/18\",\"03/08/18\",\"10/08/18\",\"17/08/18\",\"24/08/18\",\"31/08/18\",\"07/09/18\",\"14/09/18\",\"21/09/18\",\"28/09/18\",\"05/10/18\",\"12/10/18\",\"19/10/18\",\"26/10/18\",\"02/11/18\",\"09/11/18\",\"16/11/18\",\"23/11/18\",\"30/11/18\",\"07/12/18\",\"14/12/18\",\"21/12/18\",\"28/12/18\",\"04/01/19\",\"11/01/19\",\"18/01/19\",\"25/01/19\",\"01/02/19\",\"08/02/19\",\"15/02/19\",\"22/02/19\",\"01/03/19\",\"08/03/19\",\"15/03/19\",\"22/03/19\",\"29/03/19\",\"05/04/19\",\"12/04/19\",\"19/04/19\",\"26/04/19\",\"03/05/19\",\"10/05/19\",\"17/05/19\",\"24/05/19\",\"31/05/19\",\"07/06/19\",\"14/06/19\",\"21/06/19\",\"28/06/19\",\"05/07/19\",\"12/07/19\",\"19/07/19\",\"26/07/19\",\"02/08/19\",\"09/08/19\",\"16/08/19\",\"23/08/19\",\"30/08/19\",\"06/09/19\",\"13/09/19\",\"20/09/19\",\"27/09/19\",\"04/10/19\",\"11/10/19\",\"18/10/19\",\"25/10/19\",\"01/11/19\",\"08/11/19\",\"15/11/19\",\"22/11/19\",\"29/11/19\",\"06/12/19\",\"13/12/19\",\"20/12/19\",\"27/12/19\",\"03/01/20\",\"10/01/20\",\"17/01/20\",\"24/01/20\",\"31/01/20\",\"07/02/20\",\"14/02/20\",\"21/02/20\",\"28/02/20\",\"06/03/20\",\"13/03/20\",\"20/03/20\",\"27/03/20\",\"03/04/20\",\"10/04/20\",\"17/04/20\",\"24/04/20\",\"01/05/20\",\"08/05/20\",\"15/05/20\",\"22/05/20\",\"29/05/20\",\"05/06/20\",\"12/06/20\",\"19/06/20\",\"26/06/20\",\"03/07/20\",\"10/07/20\",\"17/07/20\",\"24/07/20\",\"31/07/20\",\"07/08/20\",\"14/08/20\",\"21/08/20\",\"28/08/20\",\"04/09/20\",\"11/09/20\",\"18/09/20\",\"25/09/20\",\"02/10/20\",\"09/10/20\",\"16/10/20\",\"23/10/20\",\"30/10/20\",\"06/11/20\",\"13/11/20\",\"20/11/20\",\"27/11/20\",\"04/12/20\",\"11/12/20\",\"18/12/20\",\"25/12/20\",\"01/01/21\",\"08/01/21\",\"15/01/21\",\"22/01/21\",\"29/01/21\",\"05/02/21\",\"12/02/21\",\"19/02/21\",\"26/02/21\",\"05/03/21\",\"12/03/21\",\"19/03/21\",\"26/03/21\",\"02/04/21\",\"09/04/21\",\"16/04/21\",\"23/04/21\",\"30/04/21\",\"07/05/21\",\"14/05/21\",\"21/05/21\",\"28/05/21\",\"04/06/21\",\"11/06/21\",\"18/06/21\",\"25/06/21\",\"02/07/21\",\"09/07/21\",\"16/07/21\",\"23/07/21\",\"30/07/21\",\"06/08/21\",\"13/08/21\",\"20/08/21\",\"27/08/21\",\"03/09/21\",\"10/09/21\",\"17/09/21\",\"24/09/21\",\"01/10/21\",\"08/10/21\",\"15/10/21\",\"22/10/21\",\"29/10/21\",\"05/11/21\",\"12/11/21\",\"19/11/21\",\"26/11/21\",\"03/12/21\",\"10/12/21\",\"17/12/21\",\"24/12/21\",\"31/12/21\",\"07/01/22\",\"14/01/22\",\"21/01/22\",\"28/01/22\",\"04/02/22\",\"11/02/22\",\"18/02/22\",\"25/02/22\",\"04/03/22\",\"11/03/22\",\"18/03/22\",\"25/03/22\",\"01/04/22\",\"08/04/22\",\"15/04/22\",\"22/04/22\",\"29/04/22\",\"06/05/22\",\"13/05/22\",\"20/05/22\",\"27/05/22\",\"03/06/22\",\"10/06/22\",\"17/06/22\",\"24/06/22\",\"01/07/22\",\"08/07/22\",\"15/07/22\",\"22/07/22\",\"29/07/22\",\"05/08/22\",\"12/08/22\",\"19/08/22\",\"26/08/22\",\"02/09/22\",\"09/09/22\",\"16/09/22\",\"23/09/22\",\"30/09/22\",\"07/10/22\",\"14/10/22\",\"21/10/22\",\"28/10/22\",\"04/11/22\",\"11/11/22\",\"18/11/22\",\"25/11/22\",\"02/12/22\",\"09/12/22\",\"16/12/22\",\"23/12/22\",\"30/12/22\",\"06/01/23\",\"13/01/23\",\"20/01/23\",\"27/01/23\",\"03/02/23\",\"10/02/23\",\"17/02/23\",\"24/02/23\",\"03/03/23\"],\"egg\":[\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.83\",\"2.9\",\"2.9\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3\",\"3.5\",\"3.85\",\"3.85\",\"3.85\",\"3.85\",\"3.6\",\"3.6\",\"3.6\",\"3.6\",\"3.6\",\"3.6\",\"3.6\",\"3.6\",\"3.6\",\"3.6\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"4.1\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"3.75\",\"2.85\",\"2.85\",\"2.85\",\"2.85\",\"2.85\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.66\",\"2.5\",\"2.5\",\"2.5\",\"2.5\",\"2.5\",\"2.5\",\"2.5\",\"3\",\"3.2\",\"3.4\",\"3.5\",\"3.5\",\"3.35\",\"3.35\",\"3.35\",\"3.35\",\"3.5\",\"3.5\",\"3.5\",\"3.35\",\"3.35\",\"3.2\",\"3.2\",\"3.1\",\"3.5\",\"3.35\",\"3.5\",\"3.35\",\"3.2\",\"3.2\",\"3.35\",\"3.2\",\"3.2\",\"3.33\",\"3.2\",\"3.35\",\"3.35\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.2\",\"3.5\",\"3.5\",\"3.5\",\"3.5\",\"3.5\",\"3.5\",\"3.5\",\"3.5\",\"3.5\",\"3.65\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"4\",\"3.47\",\"3.47\",\"3.47\",\"3.47\",\"3.47\",\"3.83\",\"3.83\",\"3.83\",\"3.83\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.66\",\"3.5\",\"3.5\",\"3.83\",\"3.83\",\"3.83\",\"3.83\",\"4\",\"4\",\"4.17\",\"4\",\"4.17\",\"4.33\",\"4.33\",\"4.17\",\"4\",\"4\",\"4\",\"4.67\",\"4.67\",\"5\",\"5.17\",\"5.17\",\"5.17\",\"5.17\",\"5.17\",\"5\",\"5\",\"5.17\",\"5\",\"5\",\"4.83\",\"4.66\",\"4.33\",\"4.33\",\"4.33\",\"4.66\",\"4.66\",\"4.66\",\"4.66\",\"4.66\",\"4.66\",\"4.66\",\"4.66\",\"4.66\",\"5\",\"5\",\"5\",\"4.66\",\"4.66\",\"4.66\",\"4.66\",\"4.66\",\"5\",\"5\",\"4.83\",\"4.66\",\"4.66\",\"4.66\",\"4.5\",\"4.33\",\"4.33\",\"4.33\",\"4.33\",\"4.33\",\"4.33\",\"4.33\",\"4.33\",\"4.33\",\"4.66\",\"5\",\"5.33\",\"5.5\",\"5.5\",\"5.5\",\"5.5\",\"5.66\",\"5.66\",\"5.66\",\"5.66\",\"5.66\",\"5.66\",\"5.66\",\"5.66\",\"5.66\",\"5.66\",\"5.83\",\"5.83\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.83\",\"5.83\",\"5.83\",\"5.83\",\"5.83\",\"5.83\",\"6\",\"6\",\"6\",\"6\",\"6\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.67\",\"5.5\",\"5.5\",\"5.5\",\"5.5\",\"6\",\"6.67\",\"6.67\",\"6.83\",\"6.83\",\"6.83\",\"6.83\",\"6.83\",\"7.33\",\"7.33\"],\"corn\":[\"1.2\",\"1.2\",\"1.2\",\"1.3\",\"1.2\",\"1.2\",\"1.2\",\"1.1\",\"1.1\",\"1.1\",\"1.1\",\"1.1\",\"1.1\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.00\",\"1.00\",\"1.00\",\"0.9\",\"0.9\",\"0.9\",\"0.9\",\"0.9\",\"0.9\",\"0.9\",\"0.8\",\"0.8\",\"0.8\",\"0.8\",\"0.8\",\"0.8\",\"0.9\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.33\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.05\",\"1.05\",\"1.05\",\"1.05\",\"1.1\",\"0.95\",\"2.1\",\"2.00\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"0.85\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.2\",\"1.2\",\"1.2\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.25\",\"1.25\",\"1.25\",\"1.25\",\"1.25\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"0.85\",\"0.85\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.2\",\"1.35\",\"1.35\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.00\",\"1.00\",\"1.00\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.00\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.35\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.45\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.65\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.5\",\"1.73\",\"1.73\",\"1.73\",\"1.47\",\"1.47\",\"1.8\",\"1.8\",\"1.8\",\"2.00\",\"2.00\",\"2.00\",\"2.17\",\"2.17\",\"2.17\",\"2.17\",\"2.17\",\"2.17\",\"2.17\",\"2.17\",\"2.33\",\"2.33\",\"2.33\",\"2.13\",\"2.13\",\"1.87\",\"1.87\",\"1.87\",\"1.87\",\"1.87\",\"1.67\",\"1.67\",\"1.67\",\"1.67\",\"1.67\",\"1.47\",\"1.47\",\"1.67\",\"1.47\",\"1.47\",\"1.67\",\"1.67\",\"1.67\",\"1.67\",\"1.67\",\"1.67\",\"1.67\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"2.33\",\"2.00\",\"2.00\",\"2.33\",\"2.33\",\"2.33\",\"2.67\",\"2.67\",\"2.67\",\"2.67\",\"2.67\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.33\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"1.73\",\"1.73\",\"1.73\",\"1.73\",\"1.73\",\"1.73\",\"1.73\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"2.33\",\"2.00\",\"1.73\",\"1.73\",\"1.73\",\"1.73\",\"1.73\",\"1.73\",\"1.73\",\"2.00\",\"2.00\",\"2.00\",\"2.00\",\"2.33\",\"2.00\"]}",
        "payloadType": "json",
        "x": 190,
        "y": 60,
        "wires": [
            [
                "950a192473a84e9a"
            ]
        ]
    },
    {
        "id": "410b3762bb9d366d",
        "type": "debug",
        "z": "d768a6d29d0e02d4",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 60,
        "wires": []
    },
    {
        "id": "83315a7055b132ec",
        "type": "inject",
        "z": "d768a6d29d0e02d4",
        "name": "Ler",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "46e04cd185b831ef"
            ]
        ]
    },
    {
        "id": "d6e52932640eda57",
        "type": "debug",
        "z": "d768a6d29d0e02d4",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "a40b7215f22fda03",
        "type": "inject",
        "z": "d768a6d29d0e02d4",
        "name": "Apagar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "d1dd8b2f7389ca3a"
            ]
        ]
    },
    {
        "id": "2834f8e2c85a3be0",
        "type": "debug",
        "z": "d768a6d29d0e02d4",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "db34282adcfe837b",
        "type": "inject",
        "z": "d768a6d29d0e02d4",
        "name": "Leitura",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "cfd59c7a0530ff55"
            ]
        ]
    },
    {
        "id": "60dae11e85c7c285",
        "type": "function",
        "z": "d768a6d29d0e02d4",
        "name": "ovo",
        "func": "var arr1 = msg.payload.egg.value;\nvar arr2 = msg.payload.day.value;\n\nfunction formatData(arr1, arr2) {\n    const dataObject = [{\n        \"series\": [\"Preço do ovo por dúzia (em reais)\"],\n        \"data\": [arr1],\n        \"labels\": arr2\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(arr1, arr2);\nreturn {payload : result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 280,
        "wires": [
            [
                "2388144b08922586"
            ]
        ]
    },
    {
        "id": "b48cfea2f9aa807a",
        "type": "inject",
        "z": "d768a6d29d0e02d4",
        "name": "Leitura",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "bdda6a11a170a891"
            ]
        ]
    },
    {
        "id": "a94ca33dcc2fb401",
        "type": "function",
        "z": "d768a6d29d0e02d4",
        "name": "Milho",
        "func": "var arr1 = msg.payload.corn.value;\nvar arr2 = msg.payload.day.value;\n\nfunction formatData(arr1, arr2) {\n    const dataObject = [{\n        \"series\": [\"Preço do milho (em reais)\"],\n        \"data\": [arr1],\n        \"labels\": arr2\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(arr1, arr2);\nreturn {payload : result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "4c83d7ee49268878"
            ]
        ]
    },
    {
        "id": "950a192473a84e9a",
        "type": "NGSI Entity",
        "z": "d768a6d29d0e02d4",
        "name": "Criar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "create",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 360,
        "y": 60,
        "wires": [
            [
                "410b3762bb9d366d"
            ]
        ]
    },
    {
        "id": "46e04cd185b831ef",
        "type": "NGSI Entity",
        "z": "d768a6d29d0e02d4",
        "name": "Ler entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:EggAndCornNac",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "d6e52932640eda57"
            ]
        ]
    },
    {
        "id": "d1dd8b2f7389ca3a",
        "type": "NGSI Entity",
        "z": "d768a6d29d0e02d4",
        "name": "Excluir entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "delete",
        "entityId": "urn:ngsi-ld:AgriProductType:EggAndCornNac",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 400,
        "y": 180,
        "wires": [
            [
                "2834f8e2c85a3be0"
            ]
        ]
    },
    {
        "id": "cfd59c7a0530ff55",
        "type": "NGSI Entity",
        "z": "d768a6d29d0e02d4",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:EggAndCornNac",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 330,
        "y": 280,
        "wires": [
            [
                "60dae11e85c7c285"
            ]
        ]
    },
    {
        "id": "bdda6a11a170a891",
        "type": "NGSI Entity",
        "z": "d768a6d29d0e02d4",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:EggAndCornNac",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "a94ca33dcc2fb401"
            ]
        ]
    },
    {
        "id": "568745e7b4922640",
        "type": "ui_text",
        "z": "d768a6d29d0e02d4",
        "group": "c8f1f291b85d76d5",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fonte: (CEAGESP - Campinas) http://dw.ceasa.gov.br/",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 500,
        "y": 400,
        "wires": []
    },
    {
        "id": "2388144b08922586",
        "type": "ui_chart",
        "z": "d768a6d29d0e02d4",
        "name": "",
        "group": "c8f1f291b85d76d5",
        "order": 1,
        "width": 23,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "l",
        "interpolate": "bezier",
        "nodata": "no data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#d62728",
            "#2ca02c",
            "#ff7f0e",
            "#a4c1c9",
            "#98df8a",
            "#1f77b4",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 650,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4c83d7ee49268878",
        "type": "ui_chart",
        "z": "d768a6d29d0e02d4",
        "name": "",
        "group": "c8f1f291b85d76d5",
        "order": 2,
        "width": 23,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "l",
        "interpolate": "bezier",
        "nodata": "no data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#2ca02c",
            "#ff7f0e",
            "#a4c1c9",
            "#98df8a",
            "#1f77b4",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 650,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "c4885aa5242b3aa6",
        "type": "debug",
        "z": "3c14bb0afdbd62e1",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "6f4e3263210c92be",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "Ler",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "6c3ca0f6a4ec6dda"
            ]
        ]
    },
    {
        "id": "ad0c0d931a09fcb4",
        "type": "debug",
        "z": "3c14bb0afdbd62e1",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 100,
        "wires": []
    },
    {
        "id": "73e60e851a28cac7",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "Apagar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "847132b59e61fcde"
            ]
        ]
    },
    {
        "id": "1d8cb06fe4b8ea45",
        "type": "debug",
        "z": "3c14bb0afdbd62e1",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "3da48e82f7d9eda7",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "Leitura",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "ecd34c2213b27a82"
            ]
        ]
    },
    {
        "id": "5a35f18cbf2f21f7",
        "type": "function",
        "z": "3c14bb0afdbd62e1",
        "name": "ovo",
        "func": "var arr1 = msg.payload.price.value;\nvar arr2 = msg.payload.day.value;\n\nfunction formatData(arr1, arr2) {\n    const dataObject = [{\n        \"series\": [\"Preço Médio: Ovos, Grau A, Grande (Custo por Dúzia) nos EUA Cidade Média (APU0000708111) em Dólares\"],\n        \"data\": [arr1],\n        \"labels\": arr2\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(arr1, arr2);\nreturn {payload : result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "e043ce6c3e151604"
            ]
        ]
    },
    {
        "id": "c61d43d78fdd24a2",
        "type": "http request",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.stlouisfed.org/fred/series/observations?series_id=APU0000708111&realtime_end=9999-12-31&api_key=3ec92f0c1d69183bea1bae4f2800f401&file_type=json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 40,
        "wires": [
            [
                "6f70e4ab9dc9659a"
            ]
        ]
    },
    {
        "id": "0c721be29749ed66",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "c61d43d78fdd24a2"
            ]
        ]
    },
    {
        "id": "6f70e4ab9dc9659a",
        "type": "json",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 40,
        "wires": [
            [
                "903331c7c575b858"
            ]
        ]
    },
    {
        "id": "903331c7c575b858",
        "type": "function",
        "z": "3c14bb0afdbd62e1",
        "name": "function 3",
        "func": "// Recebe o objeto no segundo formato\nvar objeto2 = msg.payload;\n\n// Cria um novo objeto no primeiro formato\nvar objeto1 = {\n    \"id\": \"urn:ngsi-ld:AgriProductType:EggInt\",\n    \"type\": \"AgriProductType\",\n    \"name\": \"EggInt\",\n    \"description\": \"Preço internacional do ovo\",\n    \"day\": [],\n    \"price\": []\n};\n\n// Percorre as observações do objeto2 e adiciona ao objeto1\nfor (var i = 0; i < objeto2.observations.length; i++) {\n    objeto1.day.push(objeto2.observations[i].date);\n    objeto1.price.push(objeto2.observations[i].value);\n}\n\n// Define o novo objeto como payload da mensagem de saída\nmsg.payload = objeto1;\n\n// Retorna a mensagem modificada\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 40,
        "wires": [
            [
                "62d67deefc46bc53"
            ]
        ]
    },
    {
        "id": "445812963fb3523b",
        "type": "debug",
        "z": "3c14bb0afdbd62e1",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 520,
        "wires": []
    },
    {
        "id": "a7eaafb0a1a9adf6",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "Ler",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "07cb2c27e80f6b91"
            ]
        ]
    },
    {
        "id": "248c1f1abafec1d8",
        "type": "debug",
        "z": "3c14bb0afdbd62e1",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 520,
        "wires": []
    },
    {
        "id": "8eba515c639af985",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "Apagar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "4d21bacea2f9269c"
            ]
        ]
    },
    {
        "id": "7d04efd1b0dfcb01",
        "type": "debug",
        "z": "3c14bb0afdbd62e1",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 580,
        "wires": []
    },
    {
        "id": "6fd1babf9b391fec",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "Leitura",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "04bf5d837c798a67"
            ]
        ]
    },
    {
        "id": "faeb5780e9fde346",
        "type": "function",
        "z": "3c14bb0afdbd62e1",
        "name": "Milho",
        "func": "var arr1 = msg.payload.price.value;\nvar arr2 = msg.payload.day.value;\n\nfunction formatData(arr1, arr2) {\n    const dataObject = [{\n        \"series\": [\"Preço global do milho (PMAIZMTUSDM) em Dólares americanos por tonelada métrica\"],\n        \"data\": [arr1],\n        \"labels\": arr2\n    }];\n\n    return dataObject;\n}\n\nconst result = formatData(arr1, arr2);\nreturn {payload : result };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 640,
        "wires": [
            [
                "d5c8c935f33b9eff"
            ]
        ]
    },
    {
        "id": "13bc72a52a47db68",
        "type": "http request",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.stlouisfed.org/fred/series/observations?series_id=PMAIZMTUSDM&realtime_end=9999-12-31&api_key=3ec92f0c1d69183bea1bae4f2800f401&file_type=json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 460,
        "wires": [
            [
                "ced7292ff99cbb73"
            ]
        ]
    },
    {
        "id": "d7839199f5b55043",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "13bc72a52a47db68"
            ]
        ]
    },
    {
        "id": "ced7292ff99cbb73",
        "type": "json",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 460,
        "wires": [
            [
                "23ee325a2bf72f1a"
            ]
        ]
    },
    {
        "id": "23ee325a2bf72f1a",
        "type": "function",
        "z": "3c14bb0afdbd62e1",
        "name": "function 4",
        "func": "// Recebe o objeto no segundo formato\nvar objeto2 = msg.payload;\n\n// Cria um novo objeto no primeiro formato\nvar objeto1 = {\n    \"id\": \"urn:ngsi-ld:AgriProductType:CornInt\",\n    \"type\": \"AgriProductType\",\n    \"name\": \"CornInt\",\n    \"description\": \"Preço internacional do milho\",\n    \"day\": [],\n    \"price\": []\n};\n\n// Percorre as observações do objeto2 e adiciona ao objeto1\nfor (var i = 0; i < objeto2.observations.length; i++) {\n    objeto1.day.push(objeto2.observations[i].date);\n    objeto1.price.push(objeto2.observations[i].value);\n}\n\n// Define o novo objeto como payload da mensagem de saída\nmsg.payload = objeto1;\n\n// Retorna a mensagem modificada\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 460,
        "wires": [
            [
                "e4e4674b660a36d5"
            ]
        ]
    },
    {
        "id": "e52e956ac68d8148",
        "type": "debug",
        "z": "3c14bb0afdbd62e1",
        "name": "debug 41",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 760,
        "wires": []
    },
    {
        "id": "ec5bf9b193dfda94",
        "type": "function",
        "z": "3c14bb0afdbd62e1",
        "name": "function 5",
        "func": "// Recebe o objeto no segundo formato\nvar objeto2 = msg.payload;\n\n// Cria um novo objeto no primeiro formato\nvar objeto1 = {\n    \"id\": \"urn:ngsi-ld:AgriProductType:CornInt\",\n    \"type\": \"AgriProductType\",\n    \"name\": \"CornInt\",\n    \"description\": \"Preço internacional do milho\",\n    \"day\": [],\n    \"price\": []\n};\n\n// Percorre as observações do objeto2 e adiciona ao objeto1\nfor (var i = 0; i < objeto2.observations.length; i++) {\n    objeto1.day.push(objeto2.observations[i].date);\n    objeto1.price.push(objeto2.observations[i].value);\n}\n\n// Define o novo objeto como payload da mensagem de saída\nmsg.payload = objeto1;\n\n// Retorna a mensagem modificada\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 700,
        "wires": [
            [
                "d0a7fd511fefb8bc"
            ]
        ]
    },
    {
        "id": "5eb1c769168ad304",
        "type": "json",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 700,
        "wires": [
            [
                "ec5bf9b193dfda94"
            ]
        ]
    },
    {
        "id": "45e6681decd9c62b",
        "type": "http request",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.stlouisfed.org/fred/series/observations?series_id=PMAIZMTUSDM&realtime_end=9999-12-31&api_key=3ec92f0c1d69183bea1bae4f2800f401&file_type=json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 700,
        "wires": [
            [
                "5eb1c769168ad304"
            ]
        ]
    },
    {
        "id": "41bd1fbafba60efb",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "Atualizar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "45e6681decd9c62b"
            ]
        ]
    },
    {
        "id": "d427e62923ca607c",
        "type": "http request",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.stlouisfed.org/fred/series/observations?series_id=APU0000708111&realtime_end=9999-12-31&api_key=3ec92f0c1d69183bea1bae4f2800f401&file_type=json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 280,
        "wires": [
            [
                "eb4cbc5d09a8ce1a"
            ]
        ]
    },
    {
        "id": "14d7b50b1b9075f7",
        "type": "inject",
        "z": "3c14bb0afdbd62e1",
        "name": "Atualizar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "d427e62923ca607c"
            ]
        ]
    },
    {
        "id": "eb4cbc5d09a8ce1a",
        "type": "json",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "5160d850098202d0"
            ]
        ]
    },
    {
        "id": "5160d850098202d0",
        "type": "function",
        "z": "3c14bb0afdbd62e1",
        "name": "function 6",
        "func": "// Recebe o objeto no segundo formato\nvar objeto2 = msg.payload;\n\n// Cria um novo objeto no primeiro formato\nvar objeto1 = {\n    \"id\": \"urn:ngsi-ld:AgriProductType:EggInt\",\n    \"type\": \"AgriProductType\",\n    \"name\": \"EggInt\",\n    \"description\": \"Preço internacional do ovo\",\n    \"day\": [],\n    \"price\": []\n};\n\n// Percorre as observações do objeto2 e adiciona ao objeto1\nfor (var i = 0; i < objeto2.observations.length; i++) {\n    objeto1.day.push(objeto2.observations[i].date);\n    objeto1.price.push(objeto2.observations[i].value);\n}\n\n// Define o novo objeto como payload da mensagem de saída\nmsg.payload = objeto1;\n\n// Retorna a mensagem modificada\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "887a0b7c8af292f3"
            ]
        ]
    },
    {
        "id": "6a1ba0ca96b53475",
        "type": "debug",
        "z": "3c14bb0afdbd62e1",
        "name": "debug 42",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "62d67deefc46bc53",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "Criar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "upsert",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 700,
        "y": 40,
        "wires": [
            [
                "c4885aa5242b3aa6"
            ]
        ]
    },
    {
        "id": "6c3ca0f6a4ec6dda",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "Ler entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:EggInt",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "ad0c0d931a09fcb4"
            ]
        ]
    },
    {
        "id": "847132b59e61fcde",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "Excluir entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "delete",
        "entityId": "urn:ngsi-ld:AgriProductType:EggInt",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 320,
        "y": 160,
        "wires": [
            [
                "1d8cb06fe4b8ea45"
            ]
        ]
    },
    {
        "id": "ecd34c2213b27a82",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:EggInt",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "5a35f18cbf2f21f7"
            ]
        ]
    },
    {
        "id": "e4e4674b660a36d5",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "Criar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "upsert",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 720,
        "y": 460,
        "wires": [
            [
                "445812963fb3523b"
            ]
        ]
    },
    {
        "id": "07cb2c27e80f6b91",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "Ler entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:CornInt",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 310,
        "y": 520,
        "wires": [
            [
                "248c1f1abafec1d8"
            ]
        ]
    },
    {
        "id": "4d21bacea2f9269c",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "Excluir entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "delete",
        "entityId": "urn:ngsi-ld:AgriProductType:CornInt",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 340,
        "y": 580,
        "wires": [
            [
                "7d04efd1b0dfcb01"
            ]
        ]
    },
    {
        "id": "04bf5d837c798a67",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "read",
        "entityId": "urn:ngsi-ld:AgriProductType:CornInt",
        "entityType": "AgriProductType",
        "attrs": "",
        "keyValues": "false",
        "dateModified": "false",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "faeb5780e9fde346"
            ]
        ]
    },
    {
        "id": "d0a7fd511fefb8bc",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "Atualizar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "upsert",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 730,
        "y": 700,
        "wires": [
            [
                "e52e956ac68d8148"
            ]
        ]
    },
    {
        "id": "887a0b7c8af292f3",
        "type": "NGSI Entity",
        "z": "3c14bb0afdbd62e1",
        "name": "Atualizar entidade",
        "openapis": "9bccc41af47bb660",
        "servicepath": "/",
        "actionType": "upsert",
        "entityId": "",
        "entityType": "",
        "attrs": "",
        "keyValues": "true",
        "dateModified": "false",
        "x": 710,
        "y": 280,
        "wires": [
            [
                "6a1ba0ca96b53475"
            ]
        ]
    },
    {
        "id": "a7c168d462b78202",
        "type": "ui_text",
        "z": "3c14bb0afdbd62e1",
        "group": "5e1547b4c5b09615",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fonte: https://fred.stlouisfed.org/",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 410,
        "y": 340,
        "wires": []
    },
    {
        "id": "e043ce6c3e151604",
        "type": "ui_chart",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "group": "5e1547b4c5b09615",
        "order": 1,
        "width": 23,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "l",
        "interpolate": "bezier",
        "nodata": "no data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#d62728",
            "#2ca02c",
            "#ff7f0e",
            "#a4c1c9",
            "#98df8a",
            "#1f77b4",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 590,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d5c8c935f33b9eff",
        "type": "ui_chart",
        "z": "3c14bb0afdbd62e1",
        "name": "",
        "group": "5e1547b4c5b09615",
        "order": 1,
        "width": 23,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "l",
        "interpolate": "bezier",
        "nodata": "no data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#2ca02c",
            "#ff7f0e",
            "#a4c1c9",
            "#98df8a",
            "#1f77b4",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 610,
        "y": 640,
        "wires": [
            []
        ]
    }
]